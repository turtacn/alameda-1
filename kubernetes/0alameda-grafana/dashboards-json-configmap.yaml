apiVersion: v1
data:
  clusterhealth.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 8,
          "panels": [],
          "title": "Cluster Health Status",
          "type": "row"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "datasource": "Prometheus",
          "editable": true,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 0,
            "y": 1
          },
          "id": 26,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "(sum(up{job=~\".*apiserver.*\"} == 1) / count(up{job=~\".*apiserver.*\"}))",
              "format": "time_series",
              "intervalFactor": 2,
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "0.5, 0.8",
          "title": "API Servers UP",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 1,
          "grid": {
            "threshold1Color": "rgba(216, 200, 27, 0.27)",
            "threshold2Color": "rgba(234, 112, 112, 0.22)"
          },
          "gridPos": {
            "h": 5,
            "w": 10,
            "x": 4,
            "y": 1
          },
          "id": 32,
          "isNew": false,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum by(instance) (rate(apiserver_request_count{code=~\"5..\"}[5m])) / sum by(instance) (rate(apiserver_request_count[5m]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{instance}}",
              "refId": "A",
              "step": 60
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "API Server Request Error Rates",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": false,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "logBase": 1,
              "max": "1",
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "description": "Crashing Pods in control plane (kube-system)",
          "editable": true,
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 14,
            "y": 1
          },
          "id": 24,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(increase(kube_pod_container_status_restarts_total{namespace=~\"kube-system\"}[1h]) > 5)",
              "format": "time_series",
              "intervalFactor": 2,
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "1, 3",
          "title": "Crashing Control Plane Pods",
          "transparent": false,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "description": "Crashing Pods in cluster (include the control plane)",
          "editable": true,
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 19,
            "y": 1
          },
          "id": 52,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(increase(kube_pod_container_status_restarts_total[1h]) > 5)",
              "format": "time_series",
              "intervalFactor": 2,
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "1, 3",
          "title": "Crashing Pods",
          "transparent": false,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "0",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "datasource": "Prometheus",
          "editable": true,
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 0,
            "y": 6
          },
          "id": 46,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(up{job=\"kubelet\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "",
          "title": "Total Nodes",
          "transparent": false,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "datasource": "Prometheus",
          "decimals": null,
          "editable": true,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 4,
            "y": 6
          },
          "hideTimeOverride": false,
          "id": 22,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(kube_node_status_condition{condition=\"Ready\",status=\"true\"}) / sum(kube_node_status_condition{condition=\"Ready\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "",
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "0.5,0.9",
          "title": "Node Ready",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "min"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "datasource": "Prometheus",
          "editable": true,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 8,
            "y": 6
          },
          "id": 28,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "(sum(up{job=\"kubelet\"} == 1) / count(up{job=\"kubelet\"}))",
              "format": "time_series",
              "intervalFactor": 2,
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "0.5, 0.8",
          "title": "Nodes UP",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "min"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "decimals": null,
          "editable": true,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 12,
            "y": 6
          },
          "hideTimeOverride": false,
          "id": 20,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(kube_node_status_condition{condition=\"MemoryPressure\",status=\"true\"}) / sum(kube_node_status_condition{condition=\"MemoryPressure\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "",
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "0.1,0.5",
          "title": "Node Memory Pressure",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "max"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "editable": true,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 16,
            "y": 6
          },
          "hideTimeOverride": false,
          "id": 51,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(kube_node_status_condition{condition=\"DiskPressure\",status=\"true\"}) / sum(kube_node_status_condition{condition=\"DiskPressure\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "",
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "0.1,0.5",
          "title": "Node Disk Pressure",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "max"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "description": "Percentage of nodes over cluster that have unscheduled objects",
          "editable": true,
          "format": "percentunit",
          "gauge": {
            "maxValue": 1,
            "minValue": 0,
            "show": true,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 20,
            "y": 6
          },
          "hideTimeOverride": false,
          "id": 12,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(kube_node_spec_unschedulable)  / count(up{job=\"kubelet\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "",
              "refId": "A",
              "step": 600
            }
          ],
          "thresholds": "0.1, 0.5",
          "title": "Nodes Unschedulable",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [],
          "valueName": "max"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 10
          },
          "id": 59,
          "panels": [],
          "title": "Cluster Resource Usage",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "description": "Utilization against total cluster CPU resource",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 0,
            "y": 11
          },
          "id": 54,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "node:node_cpu_utilisation:avg1m * node:node_num_cpu:sum / scalar(sum(node:node_num_cpu:sum))",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "intervalFactor": 2,
              "legendFormat": "{{node}}",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU Utilisation",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": "1",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "description": "Utilization against total cluster memory resource",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 11
          },
          "id": 56,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "node:node_memory_utilisation:ratio",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "intervalFactor": 2,
              "legendFormat": "{{node}}",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory Utilisation",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": "1",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "description": "Utilization against total cluster disk resource",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 0,
            "y": 17
          },
          "id": 55,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(max(node_filesystem_size_bytes{fstype=~\"ext[234]|btrfs|xfs|zfs\"} - node_filesystem_avail_bytes{fstype=~\"ext[234]|btrfs|xfs|zfs\"}) by (device,pod,namespace)) by (pod,namespace)\n/ scalar(sum(max(node_filesystem_size_bytes{fstype=~\"ext[234]|btrfs|xfs|zfs\"}) by (device,pod,namespace)))\n* on (namespace, pod) group_left (node) node_namespace_pod:kube_pod_info:",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "intervalFactor": 2,
              "legendFormat": "{{node}}",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Disk Capacity",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": "1",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fill": 1,
          "gridPos": {
            "h": 6,
            "w": 12,
            "x": 12,
            "y": 17
          },
          "id": 57,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "node:node_disk_utilisation:avg_irate / scalar(:kube_pod_info_node_count:)",
              "format": "time_series",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "intervalFactor": 2,
              "legendFormat": "{{node}}",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Disk IO Utilisation",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": "1",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": false,
      "schemaVersion": 16,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Cluster Health",
      "uid": "Re7d8mTlddmka",
      "version": 1
    }
  hpa-recommendation.json: "{\r\n  \"annotations\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"builtIn\": 1,\r\n        \"datasource\": \"-- Grafana --\",\r\n        \"enable\":
    true,\r\n        \"hide\": true,\r\n        \"iconColor\": \"rgba(0, 211, 255,
    1)\",\r\n        \"name\": \"Annotations & Alerts\",\r\n        \"type\": \"dashboard\"\r\n
    \     }\r\n    ]\r\n  },\r\n  \"editable\": true,\r\n  \"gnetId\": null,\r\n  \"graphTooltip\":
    0,\r\n  \"id\": 10,\r\n  \"iteration\": 1560932393249,\r\n  \"links\": [],\r\n
    \ \"panels\": [\r\n    {\r\n      \"collapsed\": false,\r\n      \"gridPos\":
    {\r\n        \"h\": 1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    0\r\n      },\r\n      \"id\": 12,\r\n      \"panels\": [],\r\n      \"title\":
    \"Managed Objects\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n      \"columns\":
    [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"description\": \"\",\r\n
    \     \"fontSize\": \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 5,\r\n
    \       \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 1\r\n      },\r\n      \"id\":
    5,\r\n      \"links\": [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n
    \     \"showHeader\": true,\r\n      \"sort\": {\r\n        \"col\": 0,\r\n        \"desc\":
    true\r\n      },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Project (Namespace)\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"namespace\",\r\n          \"thresholds\": [],\r\n
    \         \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"current replicas\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"desired replicas\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"memory limit\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"bytes\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"memory request\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"bytes\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"cpu limit\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"cpu request\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"decimals\": 2,\r\n          \"pattern\": \"/.*/\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n          \"format\": \"table\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"intervalFactor\":
    1,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select top_controller_kind as \\\"kind\\\", top_controller_name
    as \\\"controller\\\" from alameda_cluster_status..container where enable_HPA
    = true group by alameda_scaler_name, alameda_scaler_namespace limit 1\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n      \"title\":
    \"Managed Controllers with HPA ScalingTool per Selected AlamedaScaler\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"collapsed\": false,\r\n      \"gridPos\": {\r\n        \"h\":
    1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 6\r\n      },\r\n
    \     \"id\": 17,\r\n      \"panels\": [],\r\n      \"title\": \"Controller Resource
    Usage and Recommendation\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n
    \     \"cacheTimeout\": null,\r\n      \"colorBackground\": false,\r\n      \"colorValue\":
    false,\r\n      \"colors\": [\r\n        \"#299c46\",\r\n        \"rgba(237, 129,
    40, 0.89)\",\r\n        \"#d44a3a\"\r\n      ],\r\n      \"datasource\": \"InfluxDB\",\r\n
    \     \"format\": \"none\",\r\n      \"gauge\": {\r\n        \"maxValue\": 100,\r\n
    \       \"minValue\": 0,\r\n        \"show\": false,\r\n        \"thresholdLabels\":
    false,\r\n        \"thresholdMarkers\": true\r\n      },\r\n      \"gridPos\":
    {\r\n        \"h\": 3,\r\n        \"w\": 4,\r\n        \"x\": 0,\r\n        \"y\":
    7\r\n      },\r\n      \"id\": 15,\r\n      \"interval\": null,\r\n      \"links\":
    [],\r\n      \"mappingType\": 1,\r\n      \"mappingTypes\": [\r\n        {\r\n
    \         \"name\": \"value to text\",\r\n          \"value\": 1\r\n        },\r\n
    \       {\r\n          \"name\": \"range to text\",\r\n          \"value\": 2\r\n
    \       }\r\n      ],\r\n      \"maxDataPoints\": 100,\r\n      \"nullPointMode\":
    \"connected\",\r\n      \"nullText\": null,\r\n      \"postfix\": \"\",\r\n      \"postfixFontSize\":
    \"50%\",\r\n      \"prefix\": \"\",\r\n      \"prefixFontSize\": \"50%\",\r\n
    \     \"rangeMaps\": [\r\n        {\r\n          \"from\": \"null\",\r\n          \"text\":
    \"N/A\",\r\n          \"to\": \"null\"\r\n        }\r\n      ],\r\n      \"sparkline\":
    {\r\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\r\n        \"full\":
    false,\r\n        \"lineColor\": \"rgb(31, 120, 193)\",\r\n        \"show\": false\r\n
    \     },\r\n      \"tableColumn\": \"desired replicas\",\r\n      \"targets\":
    [\r\n        {\r\n          \"expr\": \"\",\r\n          \"format\": \"time_series\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"intervalFactor\":
    1,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select desired_replicas as \\\"desired replicas\\\" from
    alameda_recommendation..controller where type = 'CRT_Primitive' and namespace
    = '$ns' and \\\"name\\\" = '$controller' order by time desc limit 1\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n      \"thresholds\":
    \"\",\r\n      \"title\": \"Desired replica\",\r\n      \"type\": \"singlestat\",\r\n
    \     \"valueFontSize\": \"80%\",\r\n      \"valueMaps\": [\r\n        {\r\n          \"op\":
    \"=\",\r\n          \"text\": \"N/A\",\r\n          \"value\": \"null\"\r\n        }\r\n
    \     ],\r\n      \"valueName\": \"avg\"\r\n    },\r\n    {\r\n      \"cacheTimeout\":
    null,\r\n      \"colorBackground\": false,\r\n      \"colorValue\": false,\r\n
    \     \"colors\": [\r\n        \"#299c46\",\r\n        \"rgba(237, 129, 40, 0.89)\",\r\n
    \       \"#d44a3a\"\r\n      ],\r\n      \"datasource\": \"Prometheus\",\r\n      \"format\":
    \"none\",\r\n      \"gauge\": {\r\n        \"maxValue\": 100,\r\n        \"minValue\":
    0,\r\n        \"show\": false,\r\n        \"thresholdLabels\": false,\r\n        \"thresholdMarkers\":
    true\r\n      },\r\n      \"gridPos\": {\r\n        \"h\": 3,\r\n        \"w\":
    4,\r\n        \"x\": 4,\r\n        \"y\": 7\r\n      },\r\n      \"hideTimeOverride\":
    true,\r\n      \"id\": 14,\r\n      \"interval\": null,\r\n      \"links\": [],\r\n
    \     \"mappingType\": 1,\r\n      \"mappingTypes\": [\r\n        {\r\n          \"name\":
    \"value to text\",\r\n          \"value\": 1\r\n        },\r\n        {\r\n          \"name\":
    \"range to text\",\r\n          \"value\": 2\r\n        }\r\n      ],\r\n      \"maxDataPoints\":
    100,\r\n      \"nullPointMode\": \"connected\",\r\n      \"nullText\": null,\r\n
    \     \"postfix\": \"\",\r\n      \"postfixFontSize\": \"50%\",\r\n      \"prefix\":
    \"\",\r\n      \"prefixFontSize\": \"50%\",\r\n      \"rangeMaps\": [\r\n        {\r\n
    \         \"from\": \"null\",\r\n          \"text\": \"N/A\",\r\n          \"to\":
    \"null\"\r\n        }\r\n      ],\r\n      \"sparkline\": {\r\n        \"fillColor\":
    \"rgba(31, 118, 189, 0.18)\",\r\n        \"full\": false,\r\n        \"lineColor\":
    \"rgb(31, 120, 193)\",\r\n        \"show\": false\r\n      },\r\n      \"tableColumn\":
    \"current replicas\",\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"sum(kube_replicationcontroller_spec_replicas{namespace = \\\"$ns\\\", replicationcontroller=~\\\"$controller.*\\\"
    }) or 1-absent(sum(kube_replicationcontroller_spec_replicas{namespace = \\\"$ns\\\",
    replicationcontroller=~\\\"$controller.*\\\" }))\\n\\n+ \\n\\nsum(kube_replicaset_spec_replicas{namespace
    = \\\"$ns\\\", replicaset=~\\\"$controller.*\\\" }) or 1-absent(sum(kube_replicaset_spec_replicas{namespace
    = \\\"$ns\\\", replicaset=~\\\"$controller.*\\\" }))\",\r\n          \"format\":
    \"time_series\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    current_replicas as \\\"current replicas\\\" from alameda_recommendation..controller
    where namespace = '$ns' and \\\"name\\\" = '$controller' order by time desc limit
    1\",\r\n          \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"table\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n
    \     \"thresholds\": \"\",\r\n      \"timeFrom\": \"5m\",\r\n      \"timeShift\":
    null,\r\n      \"title\": \"Current replica\",\r\n      \"type\": \"singlestat\",\r\n
    \     \"valueFontSize\": \"80%\",\r\n      \"valueMaps\": [\r\n        {\r\n          \"op\":
    \"=\",\r\n          \"text\": \"N/A\",\r\n          \"value\": \"null\"\r\n        }\r\n
    \     ],\r\n      \"valueName\": \"current\"\r\n    },\r\n    {\r\n      \"cacheTimeout\":
    null,\r\n      \"colorBackground\": false,\r\n      \"colorValue\": false,\r\n
    \     \"colors\": [\r\n        \"#299c46\",\r\n        \"rgba(237, 129, 40, 0.89)\",\r\n
    \       \"#d44a3a\"\r\n      ],\r\n      \"datasource\": \"Prometheus\",\r\n      \"format\":
    \"none\",\r\n      \"gauge\": {\r\n        \"maxValue\": 100,\r\n        \"minValue\":
    0,\r\n        \"show\": false,\r\n        \"thresholdLabels\": false,\r\n        \"thresholdMarkers\":
    true\r\n      },\r\n      \"gridPos\": {\r\n        \"h\": 3,\r\n        \"w\":
    4,\r\n        \"x\": 8,\r\n        \"y\": 7\r\n      },\r\n      \"hideTimeOverride\":
    true,\r\n      \"id\": 18,\r\n      \"interval\": null,\r\n      \"links\": [],\r\n
    \     \"mappingType\": 1,\r\n      \"mappingTypes\": [\r\n        {\r\n          \"name\":
    \"value to text\",\r\n          \"value\": 1\r\n        },\r\n        {\r\n          \"name\":
    \"range to text\",\r\n          \"value\": 2\r\n        }\r\n      ],\r\n      \"maxDataPoints\":
    100,\r\n      \"nullPointMode\": \"connected\",\r\n      \"nullText\": null,\r\n
    \     \"postfix\": \"\",\r\n      \"postfixFontSize\": \"50%\",\r\n      \"prefix\":
    \"\",\r\n      \"prefixFontSize\": \"50%\",\r\n      \"rangeMaps\": [\r\n        {\r\n
    \         \"from\": \"null\",\r\n          \"text\": \"N/A\",\r\n          \"to\":
    \"null\"\r\n        }\r\n      ],\r\n      \"sparkline\": {\r\n        \"fillColor\":
    \"rgba(31, 118, 189, 0.18)\",\r\n        \"full\": false,\r\n        \"lineColor\":
    \"rgb(31, 120, 193)\",\r\n        \"show\": false\r\n      },\r\n      \"tableColumn\":
    \"current_cpu_limits\",\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"1000 * sum(sum(kube_pod_container_resource_limits_cpu_cores{namespace=\\\"$ns\\\",
    pod=~\\\"$controller.*\\\"}) by (namespace, pod) * sum(kube_pod_status_phase{phase=\\\"Running\\\",
    namespace=\\\"$ns\\\", pod=~\\\"$controller.*\\\"}) by (namespace, pod))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    current_cpu_limits from alameda_recommendation..controller where namespace = '$ns'
    and \\\"name\\\" = '$controller' order by time desc limit 1\\n\\nsum(label_replace(\\nsum(avg_over_time(kube_pod_container_resource_limits_cpu_cores{container!=\\\"\\\",container!=\\\"POD\\\",node=\\\"$node\\\"}[10m]))
    by (pod), \\n\\\"pod_name\\\",\\\"$1\\\",\\\"pod\\\",\\\"(.+)\\\")\\nor up * 0\\n)
    by (pod_name)\",\r\n          \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n
    \         \"resultFormat\": \"table\",\r\n          \"select\": [\r\n            [\r\n
    \             {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"thresholds\": \"\",\r\n      \"timeFrom\":
    \"5m\",\r\n      \"title\": \"Total CPU limit (milicore)\",\r\n      \"type\":
    \"singlestat\",\r\n      \"valueFontSize\": \"80%\",\r\n      \"valueMaps\": [\r\n
    \       {\r\n          \"op\": \"=\",\r\n          \"text\": \"N/A\",\r\n          \"value\":
    \"null\"\r\n        }\r\n      ],\r\n      \"valueName\": \"current\"\r\n    },\r\n
    \   {\r\n      \"cacheTimeout\": null,\r\n      \"colorBackground\": false,\r\n
    \     \"colorValue\": false,\r\n      \"colors\": [\r\n        \"#299c46\",\r\n
    \       \"rgba(237, 129, 40, 0.89)\",\r\n        \"#d44a3a\"\r\n      ],\r\n      \"datasource\":
    \"Prometheus\",\r\n      \"format\": \"none\",\r\n      \"gauge\": {\r\n        \"maxValue\":
    100,\r\n        \"minValue\": 0,\r\n        \"show\": false,\r\n        \"thresholdLabels\":
    false,\r\n        \"thresholdMarkers\": true\r\n      },\r\n      \"gridPos\":
    {\r\n        \"h\": 3,\r\n        \"w\": 4,\r\n        \"x\": 12,\r\n        \"y\":
    7\r\n      },\r\n      \"hideTimeOverride\": true,\r\n      \"id\": 19,\r\n      \"interval\":
    null,\r\n      \"links\": [],\r\n      \"mappingType\": 1,\r\n      \"mappingTypes\":
    [\r\n        {\r\n          \"name\": \"value to text\",\r\n          \"value\":
    1\r\n        },\r\n        {\r\n          \"name\": \"range to text\",\r\n          \"value\":
    2\r\n        }\r\n      ],\r\n      \"maxDataPoints\": 100,\r\n      \"nullPointMode\":
    \"connected\",\r\n      \"nullText\": null,\r\n      \"postfix\": \"\",\r\n      \"postfixFontSize\":
    \"50%\",\r\n      \"prefix\": \"\",\r\n      \"prefixFontSize\": \"50%\",\r\n
    \     \"rangeMaps\": [\r\n        {\r\n          \"from\": \"null\",\r\n          \"text\":
    \"N/A\",\r\n          \"to\": \"null\"\r\n        }\r\n      ],\r\n      \"sparkline\":
    {\r\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\r\n        \"full\":
    false,\r\n        \"lineColor\": \"rgb(31, 120, 193)\",\r\n        \"show\": false\r\n
    \     },\r\n      \"tableColumn\": \"current_cpu_requests\",\r\n      \"targets\":
    [\r\n        {\r\n          \"expr\": \"1000 * sum(sum(kube_pod_container_resource_requests_cpu_cores{namespace=\\\"$ns\\\",
    pod=~\\\"$controller.*\\\"}) by (namespace, pod) * sum(kube_pod_status_phase{phase=\\\"Running\\\",
    namespace=\\\"$ns\\\", pod=~\\\"$controller.*\\\"}) by (namespace, pod))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"1000
    * sum(kube_pod_container_resource_requests_cpu_cores{namespace=\\\"$ns\\\", pod=~\\\"$controller.*\\\"})\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"table\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n
    \     \"thresholds\": \"\",\r\n      \"timeFrom\": \"5m\",\r\n      \"title\":
    \"Total CPU request (milicore)\",\r\n      \"type\": \"singlestat\",\r\n      \"valueFontSize\":
    \"80%\",\r\n      \"valueMaps\": [\r\n        {\r\n          \"op\": \"=\",\r\n
    \         \"text\": \"N/A\",\r\n          \"value\": \"null\"\r\n        }\r\n
    \     ],\r\n      \"valueName\": \"current\"\r\n    },\r\n    {\r\n      \"cacheTimeout\":
    null,\r\n      \"colorBackground\": false,\r\n      \"colorValue\": false,\r\n
    \     \"colors\": [\r\n        \"#299c46\",\r\n        \"rgba(237, 129, 40, 0.89)\",\r\n
    \       \"#d44a3a\"\r\n      ],\r\n      \"datasource\": \"Prometheus\",\r\n      \"format\":
    \"bytes\",\r\n      \"gauge\": {\r\n        \"maxValue\": 100,\r\n        \"minValue\":
    0,\r\n        \"show\": false,\r\n        \"thresholdLabels\": false,\r\n        \"thresholdMarkers\":
    true\r\n      },\r\n      \"gridPos\": {\r\n        \"h\": 3,\r\n        \"w\":
    4,\r\n        \"x\": 16,\r\n        \"y\": 7\r\n      },\r\n      \"hideTimeOverride\":
    true,\r\n      \"id\": 20,\r\n      \"interval\": null,\r\n      \"links\": [],\r\n
    \     \"mappingType\": 1,\r\n      \"mappingTypes\": [\r\n        {\r\n          \"name\":
    \"value to text\",\r\n          \"value\": 1\r\n        },\r\n        {\r\n          \"name\":
    \"range to text\",\r\n          \"value\": 2\r\n        }\r\n      ],\r\n      \"maxDataPoints\":
    100,\r\n      \"nullPointMode\": \"connected\",\r\n      \"nullText\": null,\r\n
    \     \"postfix\": \"\",\r\n      \"postfixFontSize\": \"50%\",\r\n      \"prefix\":
    \"\",\r\n      \"prefixFontSize\": \"50%\",\r\n      \"rangeMaps\": [\r\n        {\r\n
    \         \"from\": \"null\",\r\n          \"text\": \"N/A\",\r\n          \"to\":
    \"null\"\r\n        }\r\n      ],\r\n      \"sparkline\": {\r\n        \"fillColor\":
    \"rgba(31, 118, 189, 0.18)\",\r\n        \"full\": false,\r\n        \"lineColor\":
    \"rgb(31, 120, 193)\",\r\n        \"show\": false\r\n      },\r\n      \"tableColumn\":
    \"current_mem_limits\",\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"sum(sum(kube_pod_container_resource_limits_memory_bytes{namespace=\\\"$ns\\\",
    pod=~\\\"$controller.*\\\"}) by (namespace, pod) * sum(kube_pod_status_phase{phase=\\\"Running\\\",
    namespace=\\\"$ns\\\", pod=~\\\"$controller.*\\\"}) by (namespace, pod))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    current_mem_limits from alameda_recommendation..controller where namespace = '$ns'
    and \\\"name\\\" = '$controller' order by time desc limit 1\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n      \"thresholds\":
    \"\",\r\n      \"timeFrom\": \"5m\",\r\n      \"title\": \"Total memory limit\",\r\n
    \     \"type\": \"singlestat\",\r\n      \"valueFontSize\": \"80%\",\r\n      \"valueMaps\":
    [\r\n        {\r\n          \"op\": \"=\",\r\n          \"text\": \"N/A\",\r\n
    \         \"value\": \"null\"\r\n        }\r\n      ],\r\n      \"valueName\":
    \"current\"\r\n    },\r\n    {\r\n      \"cacheTimeout\": null,\r\n      \"colorBackground\":
    false,\r\n      \"colorValue\": false,\r\n      \"colors\": [\r\n        \"#299c46\",\r\n
    \       \"rgba(237, 129, 40, 0.89)\",\r\n        \"#d44a3a\"\r\n      ],\r\n      \"datasource\":
    \"Prometheus\",\r\n      \"format\": \"bytes\",\r\n      \"gauge\": {\r\n        \"maxValue\":
    100,\r\n        \"minValue\": 0,\r\n        \"show\": false,\r\n        \"thresholdLabels\":
    false,\r\n        \"thresholdMarkers\": true\r\n      },\r\n      \"gridPos\":
    {\r\n        \"h\": 3,\r\n        \"w\": 4,\r\n        \"x\": 20,\r\n        \"y\":
    7\r\n      },\r\n      \"hideTimeOverride\": true,\r\n      \"id\": 21,\r\n      \"interval\":
    null,\r\n      \"links\": [],\r\n      \"mappingType\": 1,\r\n      \"mappingTypes\":
    [\r\n        {\r\n          \"name\": \"value to text\",\r\n          \"value\":
    1\r\n        },\r\n        {\r\n          \"name\": \"range to text\",\r\n          \"value\":
    2\r\n        }\r\n      ],\r\n      \"maxDataPoints\": 100,\r\n      \"nullPointMode\":
    \"connected\",\r\n      \"nullText\": null,\r\n      \"postfix\": \"\",\r\n      \"postfixFontSize\":
    \"50%\",\r\n      \"prefix\": \"\",\r\n      \"prefixFontSize\": \"50%\",\r\n
    \     \"rangeMaps\": [\r\n        {\r\n          \"from\": \"null\",\r\n          \"text\":
    \"N/A\",\r\n          \"to\": \"null\"\r\n        }\r\n      ],\r\n      \"sparkline\":
    {\r\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\r\n        \"full\":
    false,\r\n        \"lineColor\": \"rgb(31, 120, 193)\",\r\n        \"show\": false\r\n
    \     },\r\n      \"tableColumn\": \"current_mem_requests\",\r\n      \"targets\":
    [\r\n        {\r\n          \"expr\": \"sum(sum(kube_pod_container_resource_requests_memory_bytes{namespace=\\\"$ns\\\",
    pod=~\\\"$controller.*\\\"}) by (namespace, pod) * sum(kube_pod_status_phase{phase=\\\"Running\\\",
    namespace=\\\"$ns\\\", pod=~\\\"$controller.*\\\"}) by (namespace, pod))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    current_mem_requests from alameda_recommendation..controller where namespace =
    '$ns' and \\\"name\\\" = '$controller' order by time desc limit 1\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n      \"thresholds\":
    \"\",\r\n      \"timeFrom\": \"5m\",\r\n      \"title\": \"Total memory request\",\r\n
    \     \"type\": \"singlestat\",\r\n      \"valueFontSize\": \"80%\",\r\n      \"valueMaps\":
    [\r\n        {\r\n          \"op\": \"=\",\r\n          \"text\": \"N/A\",\r\n
    \         \"value\": \"null\"\r\n        }\r\n      ],\r\n      \"valueName\":
    \"current\"\r\n    },\r\n    {\r\n      \"aliasColors\": {},\r\n      \"bars\":
    false,\r\n      \"dashLength\": 10,\r\n      \"dashes\": false,\r\n      \"datasource\":
    \"-- Mixed --\",\r\n      \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\":
    6,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 10\r\n      },\r\n
    \     \"height\": \"\",\r\n      \"id\": 9,\r\n      \"interval\": \">30s\",\r\n
    \     \"legend\": {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n
    \       \"hideEmpty\": false,\r\n        \"hideZero\": false,\r\n        \"max\":
    false,\r\n        \"min\": false,\r\n        \"show\": true,\r\n        \"total\":
    false,\r\n        \"values\": false\r\n      },\r\n      \"lines\": true,\r\n
    \     \"linewidth\": 2,\r\n      \"links\": [],\r\n      \"nullPointMode\": \"null\",\r\n
    \     \"percentage\": false,\r\n      \"pointradius\": 5,\r\n      \"points\":
    false,\r\n      \"renderer\": \"flot\",\r\n      \"seriesOverrides\": [\r\n        {\r\n
    \         \"alias\": \"Observation : CPU usage\",\r\n          \"color\": \"#5195ce\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"Observation : current CPU limit\",\r\n
    \         \"color\": \"#f2c96d\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Observation : current CPU request\",\r\n          \"color\": \"#7eb26d\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"Recommendation: desired CPU
    limit\",\r\n          \"color\": \"#f2c96d\",\r\n          \"steppedLine\": true\r\n
    \       }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\": false,\r\n
    \     \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"1000 * sum(max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name=~\\\"$container\\\", container_name!=\\\"\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"intervalFactor\": 1,\r\n          \"legendFormat\": \"Observation
    : CPU usage\",\r\n          \"refId\": \"C\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Observation : current CPU limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select current_cpu_limits from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"K\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Observation : current
    CPU request\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select current_cpu_requests  from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"L\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: desired
    CPU limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select desired_cpu_limits from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"J\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: desired
    replica\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select desired_replicas from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"M\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Observation : current
    replica\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select current_replicas from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"N\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"thresholds\": [],\r\n      \"timeFrom\":
    null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\": null,\r\n      \"title\":
    \"Resource Object CPU Usage(milicore) vs Replica Recommendation\",\r\n      \"tooltip\":
    {\r\n        \"shared\": true,\r\n        \"sort\": 0,\r\n        \"value_type\":
    \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n      \"xaxis\": {\r\n
    \       \"buckets\": null,\r\n        \"mode\": \"time\",\r\n        \"name\":
    null,\r\n        \"show\": true,\r\n        \"values\": []\r\n      },\r\n      \"yaxes\":
    [\r\n        {\r\n          \"decimals\": 0,\r\n          \"format\": \"none\",\r\n
    \         \"label\": null,\r\n          \"logBase\": 1,\r\n          \"max\":
    null,\r\n          \"min\": null,\r\n          \"show\": true\r\n        },\r\n
    \       {\r\n          \"decimals\": 0,\r\n          \"format\": \"none\",\r\n
    \         \"label\": null,\r\n          \"logBase\": 1,\r\n          \"max\":
    null,\r\n          \"min\": null,\r\n          \"show\": true\r\n        }\r\n
    \     ],\r\n      \"yaxis\": {\r\n        \"align\": false,\r\n        \"alignLevel\":
    null\r\n      }\r\n    },\r\n    {\r\n      \"aliasColors\": {},\r\n      \"bars\":
    false,\r\n      \"dashLength\": 10,\r\n      \"dashes\": false,\r\n      \"datasource\":
    \"-- Mixed --\",\r\n      \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\":
    6,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 16\r\n      },\r\n
    \     \"height\": \"\",\r\n      \"id\": 10,\r\n      \"interval\": \">30s\",\r\n
    \     \"legend\": {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n
    \       \"hideEmpty\": false,\r\n        \"hideZero\": false,\r\n        \"max\":
    false,\r\n        \"min\": false,\r\n        \"show\": true,\r\n        \"total\":
    false,\r\n        \"values\": false\r\n      },\r\n      \"lines\": true,\r\n
    \     \"linewidth\": 2,\r\n      \"links\": [],\r\n      \"nullPointMode\": \"null\",\r\n
    \     \"percentage\": false,\r\n      \"pointradius\": 5,\r\n      \"points\":
    false,\r\n      \"renderer\": \"flot\",\r\n      \"seriesOverrides\": [\r\n        {\r\n
    \         \"alias\": \"Observation : memory usage\",\r\n          \"color\": \"#5195ce\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"Observation : current memory
    limit\",\r\n          \"color\": \"#f2c96d\",\r\n          \"steppedLine\": true\r\n
    \       },\r\n        {\r\n          \"alias\": \"Observation : current memory
    request\",\r\n          \"color\": \"#7eb26d\",\r\n          \"steppedLine\":
    true\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation : desired
    memory limit\",\r\n          \"color\": \"#f2c96d\",\r\n          \"steppedLine\":
    true\r\n        }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\":
    false,\r\n      \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n
    \         \"datasource\": \"Prometheus\",\r\n          \"expr\": \"sum(max_over_time(container_memory_usage_bytes{namespace=\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name=~\\\"$container\\\", container_name!=\\\"\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"intervalFactor\": 1,\r\n          \"legendFormat\": \"Observation
    : memory usage\",\r\n          \"refId\": \"C\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Observation : current memory limit\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": true,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    current_mem_limits from \\\"alameda_recommendation\\\"..\\\"controller\\\" where
    type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"J\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Observation : current
    memory request\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select current_mem_requests from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation : desired
    memory limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    desired_mem_limits from \\\"alameda_recommendation\\\"..\\\"controller\\\" where
    \\\"name\\\" = '$controller' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n
    \         \"alias\": \"Observation : current replica\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": true,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    current_replicas from \\\"alameda_recommendation\\\"..\\\"controller\\\" where
    type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation : desired
    replica\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select desired_replicas from \\\"alameda_recommendation\\\"..\\\"controller\\\"
    where type = 'CRT_Primitive' and \\\"name\\\" = '$controller' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"E\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"thresholds\": [],\r\n      \"timeFrom\":
    null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\": null,\r\n      \"title\":
    \"Resource Object Memory vs Replica Recommendation\",\r\n      \"tooltip\": {\r\n
    \       \"shared\": true,\r\n        \"sort\": 0,\r\n        \"value_type\": \"individual\"\r\n
    \     },\r\n      \"type\": \"graph\",\r\n      \"xaxis\": {\r\n        \"buckets\":
    null,\r\n        \"mode\": \"time\",\r\n        \"name\": null,\r\n        \"show\":
    true,\r\n        \"values\": []\r\n      },\r\n      \"yaxes\": [\r\n        {\r\n
    \         \"decimals\": null,\r\n          \"format\": \"bytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": true\r\n        },\r\n        {\r\n          \"decimals\":
    0,\r\n          \"format\": \"none\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        }\r\n      ],\r\n      \"yaxis\": {\r\n        \"align\": false,\r\n
    \       \"alignLevel\": null\r\n      }\r\n    }\r\n  ],\r\n  \"refresh\": \"30s\",\r\n
    \ \"schemaVersion\": 16,\r\n  \"style\": \"dark\",\r\n  \"tags\": [],\r\n  \"templating\":
    {\r\n    \"list\": [\r\n      {\r\n        \"allValue\": null,\r\n        \"current\":
    {\r\n          \"text\": \"webapp\",\r\n          \"value\": \"webapp\"\r\n        },\r\n
    \       \"datasource\": \"InfluxDB\",\r\n        \"definition\": \"select alameda_scaler_namespace,enable_HPA
    from alameda_cluster_status..container where enable_HPA= true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\":
    false,\r\n        \"label\": \"Namespace\",\r\n        \"multi\": false,\r\n        \"name\":
    \"ns\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_namespace,enable_HPA
    from alameda_cluster_status..container where enable_HPA= true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"nginx-app\",\r\n          \"value\":
    \"nginx-app\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"select alameda_scaler_name,enable_HPA from alameda_cluster_status..container
    where \\\"alameda_scaler_namespace\\\" = '$ns' and enable_HPA= true group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\" order by time desc limit 1\",\r\n        \"hide\":
    0,\r\n        \"includeAll\": false,\r\n        \"label\": \"AlamedaScaler\",\r\n
    \       \"multi\": false,\r\n        \"name\": \"scaler\",\r\n        \"options\":
    [],\r\n        \"query\": \"select alameda_scaler_name,enable_HPA from alameda_cluster_status..container
    where \\\"alameda_scaler_namespace\\\" = '$ns' and enable_HPA= true group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\" order by time desc limit 1\",\r\n        \"refresh\":
    2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\":
    0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\":
    \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\": false\r\n      },\r\n
    \     {\r\n        \"allValue\": null,\r\n        \"current\": {\r\n          \"text\":
    \"nginx-deployment\",\r\n          \"value\": \"nginx-deployment\"\r\n        },\r\n
    \       \"datasource\": \"InfluxDB\",\r\n        \"definition\": \"show tag values
    on alameda_cluster_status from controller with key=\\\"name\\\" where \\\"owner_namespace\\\"
    = '$ns' and \\\"owner_name\\\" = '$scaler'\",\r\n        \"hide\": 0,\r\n        \"includeAll\":
    false,\r\n        \"label\": \"controller\",\r\n        \"multi\": false,\r\n
    \       \"name\": \"controller\",\r\n        \"options\": [],\r\n        \"query\":
    \"show tag values on alameda_cluster_status from controller with key=\\\"name\\\"
    where \\\"owner_namespace\\\" = '$ns' and \\\"owner_name\\\" = '$scaler'\",\r\n
    \       \"refresh\": 2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\":
    false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\":
    [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\":
    false\r\n      },\r\n      {\r\n        \"allValue\": null,\r\n        \"current\":
    {\r\n          \"text\": \"All\",\r\n          \"value\": \"$__all\"\r\n        },\r\n
    \       \"datasource\": \"InfluxDB\",\r\n        \"definition\": \"select pod_name,enable_HPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    = '$ns' and \\\"alameda_scaler_name\\\" = '$scaler' and \\\"top_controller_name\\\"
    = '$controller' group by \\\"pod_name\\\" order by time desc limit 1\",\r\n        \"hide\":
    2,\r\n        \"includeAll\": true,\r\n        \"label\": \"pod\",\r\n        \"multi\":
    true,\r\n        \"name\": \"pod\",\r\n        \"options\": [],\r\n        \"query\":
    \"select pod_name,enable_HPA from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    = '$ns' and \\\"alameda_scaler_name\\\" = '$scaler' and \\\"top_controller_name\\\"
    = '$controller' group by \\\"pod_name\\\" order by time desc limit 1\",\r\n        \"refresh\":
    2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\":
    0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\":
    \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\": false\r\n      },\r\n
    \     {\r\n        \"allValue\": null,\r\n        \"current\": {\r\n          \"text\":
    \"All\",\r\n          \"value\": \"$__all\"\r\n        },\r\n        \"datasource\":
    \"InfluxDB\",\r\n        \"definition\": \"select \\\"name\\\",enable_HPA from
    alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\" = '$ns'
    and \\\"alameda_scaler_name\\\" = '$scaler' and \\\"top_controller_name\\\" =
    '$controller' group by \\\"name\\\" order by time desc limit 1\",\r\n        \"hide\":
    2,\r\n        \"includeAll\": true,\r\n        \"label\": \"container\",\r\n        \"multi\":
    true,\r\n        \"name\": \"container\",\r\n        \"options\": [],\r\n        \"query\":
    \"select \\\"name\\\",enable_HPA from alameda_cluster_status..container where
    \\\"alameda_scaler_namespace\\\" = '$ns' and \\\"alameda_scaler_name\\\" = '$scaler'
    and \\\"top_controller_name\\\" = '$controller' group by \\\"name\\\" order by
    time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\": \"\",\r\n
    \       \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      }\r\n    ]\r\n  },\r\n  \"time\":
    {\r\n    \"from\": \"now-1h\",\r\n    \"to\": \"now+20m\"\r\n  },\r\n  \"timepicker\":
    {\r\n    \"refresh_intervals\": [\r\n      \"5s\",\r\n      \"10s\",\r\n      \"30s\",\r\n
    \     \"1m\",\r\n      \"5m\",\r\n      \"15m\",\r\n      \"30m\",\r\n      \"1h\",\r\n
    \     \"2h\",\r\n      \"1d\"\r\n    ],\r\n    \"time_options\": [\r\n      \"5m\",\r\n
    \     \"15m\",\r\n      \"1h\",\r\n      \"6h\",\r\n      \"12h\",\r\n      \"24h\",\r\n
    \     \"2d\",\r\n      \"7d\",\r\n      \"30d\"\r\n    ]\r\n  },\r\n  \"timezone\":
    \"\",\r\n  \"title\": \"HPA Recommendation\",\r\n  \"uid\": \"dddy5uda\",\r\n
    \ \"version\": 7\r\n}"
  nodehealth.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 2,
      "iteration": 1552461762846,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "panels": [],
          "title": "Node Resource Usage",
          "type": "row"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "Prometheus",
          "description": "number of CPU cores",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 0,
            "y": 1
          },
          "id": 66,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "kube_node_status_capacity_cpu_cores{node=\"$node\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "CPU Capacity",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "decimals": 2,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 6,
            "w": 5,
            "x": 4,
            "y": 1
          },
          "id": 54,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "node:node_cpu_utilisation:avg1m{node=\"$node\"} * 100",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "50, 80",
          "title": "CPU Usage",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 6,
            "w": 15,
            "x": 9,
            "y": 1
          },
          "height": "230px",
          "id": 73,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "topk(5, sum(rate(container_cpu_usage_seconds_total{image!=\"\",name=~\"^k8s_.*\",container_name!=\"POD\"}[2m])\r\n* on (namespace, pod_name) group_left (node) label_replace(node_namespace_pod:kube_pod_info:{node=\"$node\"}, \"pod_name\", \"$1\", \"pod\", \"(.*)\"))  by (pod_name))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "{{ pod_name }}",
              "metric": "container_cpu_usage_seconds_total",
              "refId": "A",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TOP CPU Pods",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "Prometheus",
          "format": "bytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 0,
            "y": 7
          },
          "id": 68,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "kube_node_status_capacity_memory_bytes{node=\"$node\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "RAM Capacity",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "decimals": 2,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 6,
            "w": 5,
            "x": 4,
            "y": 7
          },
          "id": 56,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": false
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "node:node_memory_utilisation:{node=\"$node\"} * 100",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "50,80",
          "title": "Memory Usage",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "avg"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fill": 0,
          "gridPos": {
            "h": 6,
            "w": 15,
            "x": 9,
            "y": 7
          },
          "height": "300px",
          "id": 75,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "null",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "topk(5, sum(container_memory_usage_bytes{image!=\"\"}\n* on (namespace, pod_name) group_left (node) label_replace(node_namespace_pod:kube_pod_info:{node=\"$node\"}, \"pod_name\", \"$1\", \"pod\", \"(.*)\"))  by (pod_name))\n",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{pod_name}}",
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Top 5 Memory Intense Pods",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 71,
          "panels": [],
          "title": "Node Running Status",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "decimals": 0,
          "fill": 0,
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 14
          },
          "id": 77,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": true,
            "show": true,
            "sideWidth": 250,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 2,
          "links": [],
          "nullPointMode": "null as zero",
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(kube_pod_status_phase\r\n* on (namespace, pod) group_left (node) node_namespace_pod:kube_pod_info:{node=\"$node\"}\r\n) by (phase)",
              "format": "time_series",
              "hide": false,
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "{{ phase }}",
              "metric": "kube_pod_status_phase",
              "refId": "A",
              "step": 10
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Pods Running Status Count",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [
            {
              "text": "Avg",
              "value": "avg"
            }
          ],
          "datasource": "Prometheus",
          "description": "Note: limit may exceeds usage in a pod due to  some containers of it  does not have limits.",
          "fontSize": "100%",
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 20
          },
          "hideTimeOverride": true,
          "id": 60,
          "links": [],
          "pageSize": 8,
          "repeat": null,
          "repeatDirection": "v",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 6,
            "desc": false
          },
          "styles": [
            {
              "alias": "Pod",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(50, 172, 45, 0.97)",
                "#c15c17"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "link": false,
              "linkTooltip": "",
              "linkUrl": "",
              "pattern": "pod_name",
              "thresholds": [
                "30",
                "80"
              ],
              "type": "string",
              "unit": "currencyUSD"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Time",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "CPU Usage",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 3,
              "mappingType": 1,
              "pattern": "Value #C",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            },
            {
              "alias": "CPU Request",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 3,
              "mappingType": 1,
              "pattern": "Value #A",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            },
            {
              "alias": "CPU Limit",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 3,
              "mappingType": 1,
              "pattern": "Value #B",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            },
            {
              "alias": "Mem Usage",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Value #D",
              "thresholds": [],
              "type": "number",
              "unit": "bytes"
            },
            {
              "alias": "Mem Request",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Value #E",
              "thresholds": [],
              "type": "number",
              "unit": "bytes"
            },
            {
              "alias": "Mem Limit",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Value #F",
              "thresholds": [],
              "type": "number",
              "unit": "bytes"
            },
            {
              "alias": "Restart time",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Value #G",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "expr": "sum(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{container_name!=\"\",container_name!=\"POD\",pod_name!=\"\"}\r\n* on (namespace, pod_name) group_left (node) label_replace(node_namespace_pod:kube_pod_info:{node=\"$node\"}, \"pod_name\", \"$1\", \"pod\", \"(.*)\")) by (pod_name)",
              "format": "table",
              "hide": false,
              "instant": true,
              "intervalFactor": 1,
              "refId": "C"
            },
            {
              "expr": "sum(label_replace(\nsum(avg_over_time(kube_pod_container_resource_requests_cpu_cores{container!=\"\",container!=\"POD\",node=\"$node\"}[10m])) by (pod), \n\"pod_name\",\"$1\",\"pod\",\"(.+)\")\nor up * 0\n) by (pod_name)",
              "format": "table",
              "hide": false,
              "instant": true,
              "intervalFactor": 1,
              "refId": "A"
            },
            {
              "expr": "sum(label_replace(\nsum(avg_over_time(kube_pod_container_resource_limits_cpu_cores{container!=\"\",container!=\"POD\",node=\"$node\"}[10m])) by (pod), \n\"pod_name\",\"$1\",\"pod\",\"(.+)\")\nor up * 0\n) by (pod_name)",
              "format": "table",
              "hide": false,
              "instant": true,
              "intervalFactor": 1,
              "refId": "B"
            },
            {
              "expr": "sum(container_memory_usage_bytes{container_name!=\"POD\", container_name!=\"\"}\r\n* on (namespace, pod_name) group_left (node) label_replace(node_namespace_pod:kube_pod_info:{node=\"$node\"}, \"pod_name\", \"$1\", \"pod\", \"(.*)\")\r\n) by (pod_name)",
              "format": "table",
              "hide": false,
              "instant": true,
              "intervalFactor": 1,
              "refId": "D"
            },
            {
              "expr": "sum(label_replace(label_replace(\nsum(avg_over_time(kube_pod_container_resource_requests_memory_bytes{container!=\"\",container!=\"POD\",node=\"$node\"}[10m])) by (pod),\n\"container_name\",\"$1\",\"container\",\"(.+)\"), \"pod_name\",\"$1\",\"pod\",\"(.+)\")\nor up * 0\n) by (pod_name)\n",
              "format": "table",
              "hide": false,
              "instant": true,
              "intervalFactor": 1,
              "refId": "E"
            },
            {
              "expr": "sum(label_replace(label_replace(\nsum(avg_over_time(kube_pod_container_resource_limits_memory_bytes{container!=\"\",container!=\"POD\",node=\"$node\"}[10m])) by (pod),\n\"container_name\",\"$1\",\"container\",\"(.+)\"), \"pod_name\",\"$1\",\"pod\",\"(.+)\")\nor up * 0\n) by (pod_name)\n",
              "format": "table",
              "hide": false,
              "instant": true,
              "intervalFactor": 1,
              "refId": "F"
            },
            {
              "expr": "sum(label_replace(kube_pod_container_status_restarts_total{container!=\"\",container!=\"POD\",pod !=\"\"}, \"pod_name\", \"$1\", \"pod\", \"(.*)\")\r\n* on (namespace, pod) group_left (node) node_namespace_pod:kube_pod_info:{node=\"$node\"}) by (pod_name)",
              "format": "table",
              "instant": true,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "G"
            }
          ],
          "timeFrom": "1M",
          "timeShift": null,
          "title": "Current running pods",
          "transform": "table",
          "transparent": false,
          "type": "table"
        }
      ],
      "refresh": "1m",
      "schemaVersion": 16,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {
              "text": "vm1",
              "value": "vm1"
            },
            "datasource": "Prometheus",
            "definition": "label_values(kube_node_labels, label_kubernetes_io_hostname)",
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "node",
            "options": [],
            "query": "label_values(kube_node_labels, label_kubernetes_io_hostname)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Node Health",
      "uid": "Re78meddmk",
      "version": 1
    }
  prediction-1day.json: "{\r\n  \"annotations\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"builtIn\": 1,\r\n        \"datasource\": \"-- Grafana --\",\r\n        \"enable\":
    true,\r\n        \"hide\": true,\r\n        \"iconColor\": \"rgba(0, 211, 255,
    1)\",\r\n        \"name\": \"Annotations & Alerts\",\r\n        \"type\": \"dashboard\"\r\n
    \     }\r\n    ]\r\n  },\r\n  \"editable\": true,\r\n  \"gnetId\": null,\r\n  \"graphTooltip\":
    0,\r\n  \"id\": 21,\r\n  \"iteration\": 1560761224017,\r\n  \"links\": [],\r\n
    \ \"panels\": [\r\n    {\r\n      \"collapsed\": false,\r\n      \"gridPos\":
    {\r\n        \"h\": 1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    0\r\n      },\r\n      \"id\": 12,\r\n      \"panels\": [],\r\n      \"title\":
    \"Managed Objects\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n      \"columns\":
    [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"description\": \"\",\r\n
    \     \"fontSize\": \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n
    \       \"w\": 18,\r\n        \"x\": 0,\r\n        \"y\": 1\r\n      },\r\n      \"id\":
    5,\r\n      \"links\": [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n
    \     \"showHeader\": true,\r\n      \"sort\": {\r\n        \"col\": 0,\r\n        \"desc\":
    true\r\n      },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"is_alameda\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"decgbytes\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_namespace\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_name\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod_name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"AlamedaScaler Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"alameda scaler\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Project (Namespace)\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"namespace\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Pod Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Container Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"container\",\r\n          \"thresholds\": [],\r\n
    \         \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Node Name\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Policy\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"policy\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"decimals\": 2,\r\n          \"pattern\": \"/.*/\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n          \"format\": \"table\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"intervalFactor\":
    1,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select \\\"name\\\" as \\\"container\\\", alameda_scaler_namespace
    as namespace, alameda_scaler_name as \\\"alameda scaler\\\", pod_name as pod,
    node_name as node, \\\"policy\\\", is_alameda from alameda_cluster_status..container
    group by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\", \\\"pod_name\\\",
    \\\"name\\\" order by time desc limit 1\",\r\n          \"rawQuery\": true,\r\n
    \         \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Containers\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"columns\": [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"fontSize\":
    \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n        \"w\": 6,\r\n
    \       \"x\": 18,\r\n        \"y\": 1\r\n      },\r\n      \"id\": 4,\r\n      \"links\":
    [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n      \"showHeader\":
    true,\r\n      \"sort\": {\r\n        \"col\": 4,\r\n        \"desc\": true\r\n
    \     },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"in_cluster\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Memory Size\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n
    \           \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n
    \           \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"node_memory_bytes\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"decbytes\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"CPU Cores\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node_cpu_cores\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Node Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"decimals\": 2,\r\n          \"pattern\":
    \"/.*/\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n
    \       {\r\n          \"expr\": \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n
    \         \"format\": \"table\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    * from alameda_cluster_status..node\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\": [\r\n
    \           [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Nodes\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"collapsed\": false,\r\n      \"gridPos\": {\r\n        \"h\":
    1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 7\r\n      },\r\n
    \     \"id\": 7,\r\n      \"panels\": [],\r\n      \"title\": \"Container Resource
    Usage and Recommendation\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n
    \     \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 8\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 9,\r\n      \"interval\": \">60m\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation
    : CPU Usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU limit\",\r\n          \"color\": \"#f2c96d\",\r\n
    \         \"steppedLine\": true\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"color\": \"#7eb26d\",\r\n          \"steppedLine\":
    true\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage
    (in 1d)\",\r\n          \"color\": \"#f9e2d2\",\r\n          \"dashLength\": 5,\r\n
    \         \"dashes\": true,\r\n          \"spaceLength\": 4\r\n        },\r\n
    \       {\r\n          \"alias\": \"Prediction: CPU usage upperbound (in 1d)\",\r\n
    \         \"color\": \"#fce2de\",\r\n          \"fillBelowTo\": \"Prediction:
    CPU usage lowerbound (in 1d)\",\r\n          \"hideTooltip\": false,\r\n          \"legend\":
    false,\r\n          \"lines\": false\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 1d)\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"hideTooltip\": false,\r\n          \"legend\": false,\r\n          \"lines\":
    false\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage
    lowerbound (in 1d)\",\r\n          \"lines\": false\r\n        }\r\n      ],\r\n
    \     \"spaceLength\": 10,\r\n      \"stack\": false,\r\n      \"steppedLine\":
    false,\r\n      \"targets\": [\r\n        {\r\n          \"datasource\": \"Prometheus\",\r\n
    \         \"expr\": \"1000 * max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=\\\"$ns\\\",
    pod_name=\\\"$pod\\\", container_name=\\\"$container\\\", container_name!=\\\"\\\"}[3600s])\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"interval\": \"\",\r\n          \"intervalFactor\": 1,\r\n
    \         \"legendFormat\": \"Observation : CPU Usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: CPU
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_limit_cpu from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '3600' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_request_cpu from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '3600' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '30' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"B\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage upperbound (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '30' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"F\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'lower_bound' and granularity = '30' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"G\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '3600' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"E\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage upperbound (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '3600' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"H\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'lower_bound' and granularity = '3600' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"I\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        }\r\n      ],\r\n      \"thresholds\":
    [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\":
    null,\r\n      \"title\": \"Container CPU: Observation, Prediction, and Recommendation
    (in CPU milicore)\",\r\n      \"tooltip\": {\r\n        \"shared\": false,\r\n
    \       \"sort\": 0,\r\n        \"value_type\": \"individual\"\r\n      },\r\n
    \     \"type\": \"graph\",\r\n      \"xaxis\": {\r\n        \"buckets\": null,\r\n
    \       \"mode\": \"time\",\r\n        \"name\": null,\r\n        \"show\": true,\r\n
    \       \"values\": []\r\n      },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\":
    3,\r\n          \"format\": \"none\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   },\r\n    {\r\n      \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 15\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 10,\r\n      \"interval\": \">60m\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation:
    memory usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory limit\",\r\n          \"color\":
    \"#f2c96d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory request\",\r\n          \"color\":
    \"#7eb26d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Prediction: memory usage (1d)\",\r\n          \"color\":
    \"#f9e2d2\",\r\n          \"dashLength\": 5,\r\n          \"dashes\": true,\r\n
    \         \"spaceLength\": 4\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (1d)\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"fillBelowTo\": \"Prediction: memory usage lowerbound (1d)\",\r\n          \"lines\":
    false\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: memory
    usage lowerbound (1d)\",\r\n          \"lines\": false\r\n        },\r\n        {\r\n
    \         \"alias\": \"Prediction: memory usage lowerbound (1d)\",\r\n          \"lines\":
    false\r\n        }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\":
    false,\r\n      \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n
    \         \"datasource\": \"Prometheus\",\r\n          \"expr\": \"max_over_time(container_memory_usage_bytes{namespace=\\\"$ns\\\",
    pod_name=\\\"$pod\\\", container_name=\\\"$container\\\", container_name!=\\\"\\\"}[3600s])\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"interval\": \"\",\r\n          \"intervalFactor\": 1,\r\n
    \         \"legendFormat\": \"Observation: memory usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: memory
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_limit_memory from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '3600' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: memory request\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    true,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_request_memory from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '3600' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '30' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (in 15m)\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '30' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"E\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage lowerbound (in 15m)\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'lower_bound' and granularity = '30' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"F\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage (1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '3600' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"G\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '3600' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"H\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage lowerbound (1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'lower_bound' and granularity = '3600' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"I\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        }\r\n      ],\r\n      \"thresholds\":
    [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\":
    null,\r\n      \"title\": \"Container Memory: Observation, Prediction, and Recommendation\",\r\n
    \     \"tooltip\": {\r\n        \"shared\": false,\r\n        \"sort\": 0,\r\n
    \       \"value_type\": \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n
    \     \"xaxis\": {\r\n        \"buckets\": null,\r\n        \"mode\": \"time\",\r\n
    \       \"name\": null,\r\n        \"show\": true,\r\n        \"values\": []\r\n
    \     },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\": null,\r\n
    \         \"format\": \"bytes\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   }\r\n  ],\r\n  \"refresh\": \"5m\",\r\n  \"schemaVersion\": 16,\r\n  \"style\":
    \"dark\",\r\n  \"tags\": [],\r\n  \"templating\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"allValue\": null,\r\n        \"current\": {\r\n          \"text\": \"webapp\",\r\n
    \         \"value\": \"webapp\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n
    \       \"definition\": \"show tag values on alameda_cluster_status from container
    with key=\\\"alameda_scaler_namespace\\\"\",\r\n        \"hide\": 0,\r\n        \"includeAll\":
    false,\r\n        \"label\": \"Namespace\",\r\n        \"multi\": false,\r\n        \"name\":
    \"ns\",\r\n        \"options\": [],\r\n        \"query\": \"show tag values on
    alameda_cluster_status from container with key=\\\"alameda_scaler_namespace\\\"\",\r\n
    \       \"refresh\": 2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\":
    false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\":
    [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\":
    false\r\n      },\r\n      {\r\n        \"allValue\": null,\r\n        \"current\":
    {\r\n          \"text\": \"nginx-app\",\r\n          \"value\": \"nginx-app\"\r\n
    \       },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"show tag values on alameda_cluster_status from container with key=\\\"alameda_scaler_name\\\"
    where \\\"alameda_scaler_namespace\\\" = '$ns'\",\r\n        \"hide\": 0,\r\n
    \       \"includeAll\": false,\r\n        \"label\": \"AlamedaScaler\",\r\n        \"multi\":
    false,\r\n        \"name\": \"scaler\",\r\n        \"options\": [],\r\n        \"query\":
    \"show tag values on alameda_cluster_status from container with key=\\\"alameda_scaler_name\\\"
    where \\\"alameda_scaler_namespace\\\" = '$ns'\",\r\n        \"refresh\": 2,\r\n
    \       \"regex\": \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\":
    0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\":
    \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\": false\r\n      },\r\n
    \     {\r\n        \"allValue\": null,\r\n        \"current\": {\r\n          \"text\":
    \"nginx-deployment-7bdddc58f9-fkz52\",\r\n          \"value\": \"nginx-deployment-7bdddc58f9-fkz52\"\r\n
    \       },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"show tag values on alameda_cluster_status from container with key=\\\"pod_name\\\"
    where \\\"alameda_scaler_namespace\\\" = '$ns' and \\\"alameda_scaler_name\\\"
    = '$scaler'\",\r\n        \"hide\": 0,\r\n        \"includeAll\": false,\r\n        \"label\":
    \"pod\",\r\n        \"multi\": false,\r\n        \"name\": \"pod\",\r\n        \"options\":
    [],\r\n        \"query\": \"show tag values on alameda_cluster_status from container
    with key=\\\"pod_name\\\" where \\\"alameda_scaler_namespace\\\" = '$ns' and \\\"alameda_scaler_name\\\"
    = '$scaler'\",\r\n        \"refresh\": 2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\":
    false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\":
    [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\":
    false\r\n      },\r\n      {\r\n        \"allValue\": null,\r\n        \"current\":
    {\r\n          \"text\": \"nginx\",\r\n          \"value\": \"nginx\"\r\n        },\r\n
    \       \"datasource\": \"InfluxDB\",\r\n        \"definition\": \"show tag values
    on alameda_cluster_status from container with key=\\\"name\\\" where \\\"alameda_scaler_namespace\\\"
    = '$ns' and \\\"alameda_scaler_name\\\" = '$scaler' and \\\"pod_name\\\" = '$pod'\",\r\n
    \       \"hide\": 0,\r\n        \"includeAll\": false,\r\n        \"label\": \"container\",\r\n
    \       \"multi\": false,\r\n        \"name\": \"container\",\r\n        \"options\":
    [],\r\n        \"query\": \"show tag values on alameda_cluster_status from container
    with key=\\\"name\\\" where \\\"alameda_scaler_namespace\\\" = '$ns' and \\\"alameda_scaler_name\\\"
    = '$scaler' and \\\"pod_name\\\" = '$pod'\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      }\r\n    ]\r\n  },\r\n  \"time\":
    {\r\n    \"from\": \"now-5d\",\r\n    \"to\": \"now+1d\"\r\n  },\r\n  \"timepicker\":
    {\r\n    \"refresh_intervals\": [\r\n      \"5s\",\r\n      \"10s\",\r\n      \"30s\",\r\n
    \     \"1m\",\r\n      \"5m\",\r\n      \"15m\",\r\n      \"30m\",\r\n      \"1h\",\r\n
    \     \"2h\",\r\n      \"1d\"\r\n    ],\r\n    \"time_options\": [\r\n      \"5m\",\r\n
    \     \"15m\",\r\n      \"1h\",\r\n      \"6h\",\r\n      \"12h\",\r\n      \"24h\",\r\n
    \     \"2d\",\r\n      \"7d\",\r\n      \"30d\"\r\n    ]\r\n  },\r\n  \"timezone\":
    \"\",\r\n  \"title\": \"Prediction  (1-day prediction window)\",\r\n  \"uid\":
    \"56affda\",\r\n  \"version\": 1\r\n}"
  vpa-recommendation-alamedascaler.json: "{\r\n  \"annotations\": {\r\n    \"list\":
    [\r\n      {\r\n        \"builtIn\": 1,\r\n        \"datasource\": \"-- Grafana
    --\",\r\n        \"enable\": true,\r\n        \"hide\": true,\r\n        \"iconColor\":
    \"rgba(0, 211, 255, 1)\",\r\n        \"limit\": 100,\r\n        \"name\": \"Annotations
    & Alerts\",\r\n        \"showIn\": 0,\r\n        \"type\": \"dashboard\"\r\n      }\r\n
    \   ]\r\n  },\r\n  \"editable\": true,\r\n  \"gnetId\": null,\r\n  \"graphTooltip\":
    0,\r\n  \"id\": 11,\r\n  \"iteration\": 1560761288060,\r\n  \"links\": [],\r\n
    \ \"panels\": [\r\n    {\r\n      \"collapsed\": false,\r\n      \"gridPos\":
    {\r\n        \"h\": 1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    0\r\n      },\r\n      \"id\": 12,\r\n      \"panels\": [],\r\n      \"title\":
    \"Managed Objects\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n      \"columns\":
    [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"description\": \"\",\r\n
    \     \"fontSize\": \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n
    \       \"w\": 18,\r\n        \"x\": 0,\r\n        \"y\": 1\r\n      },\r\n      \"id\":
    5,\r\n      \"links\": [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n
    \     \"showHeader\": true,\r\n      \"sort\": {\r\n        \"col\": 0,\r\n        \"desc\":
    true\r\n      },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"is_alameda\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"decgbytes\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_namespace\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_name\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod_name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"AlamedaScaler Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"alameda scaler\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Project (Namespace)\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"namespace\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Pod Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Container Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"container\",\r\n          \"thresholds\": [],\r\n
    \         \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Node Name\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Policy\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"policy\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"decimals\": 2,\r\n          \"pattern\": \"/.*/\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n          \"format\": \"table\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"intervalFactor\":
    1,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select \\\"name\\\" as \\\"container\\\", alameda_scaler_namespace
    as namespace, alameda_scaler_name as \\\"alameda scaler\\\", pod_name as pod,
    node_name as node, \\\"policy\\\", is_alameda from alameda_cluster_status..container
    where \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" = '$ns' group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\", \\\"pod_name\\\", \\\"name\\\" order by time desc
    limit 1\",\r\n          \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n
    \         \"resultFormat\": \"table\",\r\n          \"select\": [\r\n            [\r\n
    \             {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Containers\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"columns\": [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"fontSize\":
    \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n        \"w\": 6,\r\n
    \       \"x\": 18,\r\n        \"y\": 1\r\n      },\r\n      \"id\": 4,\r\n      \"links\":
    [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n      \"showHeader\":
    true,\r\n      \"sort\": {\r\n        \"col\": 4,\r\n        \"desc\": true\r\n
    \     },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"in_cluster\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Memory Size\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n
    \           \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n
    \           \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"node_memory_bytes\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"decbytes\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"CPU Cores\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node_cpu_cores\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Node Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"decimals\": 2,\r\n          \"pattern\":
    \"/.*/\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n
    \       {\r\n          \"expr\": \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n
    \         \"format\": \"table\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    * from alameda_cluster_status..node\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\": [\r\n
    \           [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Nodes\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"collapsed\": false,\r\n      \"gridPos\": {\r\n        \"h\":
    1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 7\r\n      },\r\n
    \     \"id\": 7,\r\n      \"panels\": [],\r\n      \"title\": \"Resource Usage
    and Recommendation of Application\",\r\n      \"type\": \"row\"\r\n    },\r\n
    \   {\r\n      \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 8\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 9,\r\n      \"interval\": \">30s\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation
    : CPU Usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU limit\",\r\n          \"color\": \"#f2c96d\",\r\n
    \         \"steppedLine\": true\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"color\": \"#7eb26d\",\r\n          \"steppedLine\":
    true\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage\",\r\n
    \         \"color\": \"#f9e2d2\",\r\n          \"dashLength\": 5,\r\n          \"dashes\":
    true,\r\n          \"spaceLength\": 4\r\n        }\r\n      ],\r\n      \"spaceLength\":
    10,\r\n      \"stack\": false,\r\n      \"steppedLine\": false,\r\n      \"targets\":
    [\r\n        {\r\n          \"alias\": \"Prediction: CPU usage\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where \\\"metric\\\" = 'cpu_usage_seconds_percentage' and \\\"name\\\" = '$container'
    and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              }\r\n            ]\r\n          ],\r\n
    \         \"tags\": [\r\n            {\r\n              \"key\": \"node\",\r\n
    \             \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"1000 * sum(max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name!=\\\"\\\", container_name!=\\\"POD\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"intervalFactor\": 1,\r\n          \"legendFormat\": \"Observation
    : CPU Usage\",\r\n          \"refId\": \"C\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_limit_cpu)
    from \\\"alameda_recommendation\\\"..\\\"container\\\" where granularity = '30'
    and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" = '$ns'  AND $timeFilter
    group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU request\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": false,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    sum(mean) from (select mean(resource_request_cpu ) from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\"
    = '$ns'  AND $timeFilter group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n
    \     \"thresholds\": [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\":
    [],\r\n      \"timeShift\": null,\r\n      \"title\": \"CPU: Observation and Recommendation
    (in CPU milicore)\",\r\n      \"tooltip\": {\r\n        \"shared\": false,\r\n
    \       \"sort\": 0,\r\n        \"value_type\": \"individual\"\r\n      },\r\n
    \     \"type\": \"graph\",\r\n      \"xaxis\": {\r\n        \"buckets\": null,\r\n
    \       \"mode\": \"time\",\r\n        \"name\": null,\r\n        \"show\": true,\r\n
    \       \"values\": []\r\n      },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\":
    3,\r\n          \"format\": \"none\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   },\r\n    {\r\n      \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 15\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 10,\r\n      \"interval\": \">30s\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation:
    memory usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory limit\",\r\n          \"color\":
    \"#f2c96d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory request\",\r\n          \"color\":
    \"#7eb26d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Prediction: memory usage\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"dashLength\": 5,\r\n          \"dashes\": true,\r\n          \"spaceLength\":
    4\r\n        }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\": false,\r\n
    \     \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [],\r\n          \"hide\": true,\r\n          \"measurement\": \"node_prediction\",\r\n
    \         \"orderByTime\": \"ASC\",\r\n          \"policy\": \"node_prediction\",\r\n
    \         \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where \\\"metric\\\" = 'memory_usage_bytes' and \\\"name\\\" = '$container' and
    \\\"pod_name\\\" = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              }\r\n            ]\r\n          ],\r\n
    \         \"tags\": [\r\n            {\r\n              \"key\": \"node\",\r\n
    \             \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"sum(max_over_time(container_memory_usage_bytes{namespace=\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name!=\\\"\\\", container_name!=\\\"POD\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"instant\": false,\r\n          \"intervalFactor\":
    1,\r\n          \"legendFormat\": \"Observation: memory usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: memory
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_limit_memory
    ) from \\\"alameda_recommendation\\\"..\\\"container\\\" where granularity = '30'
    and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" = '$ns'  AND $timeFilter
    group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory request\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": false,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    sum(mean) from (select mean(resource_request_memory ) from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\"
    = '$ns'  AND $timeFilter group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n
    \     \"thresholds\": [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\":
    [],\r\n      \"timeShift\": null,\r\n      \"title\": \"Memory: Observation and
    Recommendation\",\r\n      \"tooltip\": {\r\n        \"shared\": false,\r\n        \"sort\":
    0,\r\n        \"value_type\": \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n
    \     \"xaxis\": {\r\n        \"buckets\": null,\r\n        \"mode\": \"time\",\r\n
    \       \"name\": null,\r\n        \"show\": true,\r\n        \"values\": []\r\n
    \     },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\": null,\r\n
    \         \"format\": \"bytes\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   }\r\n  ],\r\n  \"refresh\": \"30s\",\r\n  \"schemaVersion\": 16,\r\n  \"style\":
    \"dark\",\r\n  \"tags\": [],\r\n  \"templating\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"allValue\": null,\r\n        \"current\": {\r\n          \"text\": \"webapp\",\r\n
    \         \"value\": \"webapp\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n
    \       \"definition\": \"select alameda_scaler_namespace,enable_HPA from alameda_cluster_status..container
    where enable_VPA = true group by \\\"alameda_scaler_namespace\\\" order by time
    desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\": false,\r\n
    \       \"label\": \"Namespace\",\r\n        \"multi\": false,\r\n        \"name\":
    \"ns\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_namespace,enable_HPA
    from alameda_cluster_status..container where enable_VPA = true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"influxdb-app\",\r\n          \"value\":
    \"influxdb-app\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"select alameda_scaler_name,enable_VPA from alameda_cluster_status..container
    where \\\"alameda_scaler_namespace\\\" =~ /^[[ns]]$/ and enable_VPA= true group
    by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\" order by time
    desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\": false,\r\n
    \       \"label\": \"AlamedaScaler\",\r\n        \"multi\": false,\r\n        \"name\":
    \"scaler\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and enable_VPA= true group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\" order by time desc limit 1\",\r\n        \"refresh\":
    2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\":
    0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\":
    \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\": false\r\n      },\r\n
    \     {\r\n        \"allValue\": null,\r\n        \"current\": {\r\n          \"text\":
    \"All\",\r\n          \"value\": [\r\n            \"$__all\"\r\n          ]\r\n
    \       },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"select pod_name,enable_VPA from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"hide\": 2,\r\n        \"includeAll\":
    true,\r\n        \"label\": \"pod\",\r\n        \"multi\": true,\r\n        \"name\":
    \"pod\",\r\n        \"options\": [],\r\n        \"query\": \"select pod_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"current\":
    {\r\n          \"text\": \"15m\",\r\n          \"value\": \"15m\"\r\n        },\r\n
    \       \"hide\": 2,\r\n        \"label\": null,\r\n        \"name\": \"recomInterval\",\r\n
    \       \"options\": [\r\n          {\r\n            \"selected\": true,\r\n            \"text\":
    \"15m\",\r\n            \"value\": \"15m\"\r\n          }\r\n        ],\r\n        \"query\":
    \"15m\",\r\n        \"skipUrlSync\": false,\r\n        \"type\": \"constant\"\r\n
    \     }\r\n    ]\r\n  },\r\n  \"time\": {\r\n    \"from\": \"now-2h\",\r\n    \"to\":
    \"now\"\r\n  },\r\n  \"timepicker\": {\r\n    \"refresh_intervals\": [\r\n      \"5s\",\r\n
    \     \"10s\",\r\n      \"30s\",\r\n      \"1m\",\r\n      \"5m\",\r\n      \"15m\",\r\n
    \     \"30m\",\r\n      \"1h\",\r\n      \"2h\",\r\n      \"1d\"\r\n    ],\r\n
    \   \"time_options\": [\r\n      \"5m\",\r\n      \"15m\",\r\n      \"1h\",\r\n
    \     \"6h\",\r\n      \"12h\",\r\n      \"24h\",\r\n      \"2d\",\r\n      \"7d\",\r\n
    \     \"30d\"\r\n    ]\r\n  },\r\n  \"timezone\": \"\",\r\n  \"title\": \"Per
    AlamedaScaler VPA Resource Recommendations\",\r\n  \"uid\": \"awdhhqw\",\r\n  \"version\":
    3\r\n}"
  vpa-recommendation-cluster.json: "{\r\n  \"annotations\": {\r\n    \"list\": [\r\n
    \     {\r\n        \"builtIn\": 1,\r\n        \"datasource\": \"-- Grafana --\",\r\n
    \       \"enable\": true,\r\n        \"hide\": true,\r\n        \"iconColor\":
    \"rgba(0, 211, 255, 1)\",\r\n        \"limit\": 100,\r\n        \"name\": \"Annotations
    & Alerts\",\r\n        \"showIn\": 0,\r\n        \"type\": \"dashboard\"\r\n      }\r\n
    \   ]\r\n  },\r\n  \"editable\": true,\r\n  \"gnetId\": null,\r\n  \"graphTooltip\":
    0,\r\n  \"id\": 9,\r\n  \"iteration\": 1560761259450,\r\n  \"links\": [],\r\n
    \ \"panels\": [\r\n    {\r\n      \"collapsed\": false,\r\n      \"gridPos\":
    {\r\n        \"h\": 1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    0\r\n      },\r\n      \"id\": 12,\r\n      \"panels\": [],\r\n      \"title\":
    \"Cluster-Wide Managed Objects\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n
    \     \"columns\": [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"description\":
    \"\",\r\n      \"fontSize\": \"100%\",\r\n      \"gridPos\": {\r\n        \"h\":
    6,\r\n        \"w\": 18,\r\n        \"x\": 0,\r\n        \"y\": 1\r\n      },\r\n
    \     \"id\": 5,\r\n      \"links\": [],\r\n      \"pageSize\": null,\r\n      \"scroll\":
    true,\r\n      \"showHeader\": true,\r\n      \"sort\": {\r\n        \"col\":
    8,\r\n        \"desc\": true\r\n      },\r\n      \"styles\": [\r\n        {\r\n
    \         \"alias\": \"Time\",\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"pattern\": \"Time\",\r\n          \"type\": \"hidden\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"is_alameda\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n          \"unit\":
    \"decgbytes\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"name\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"alameda_scaler_namespace\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"alameda_scaler_name\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"pod_name\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"AlamedaScaler Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda scaler\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Project (Namespace)\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"namespace\",\r\n          \"thresholds\": [],\r\n
    \         \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Pod Name\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"pod\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Container Name\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"container\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Node Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"node\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Policy\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"policy\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"decimals\": 2,\r\n          \"pattern\":
    \"/.*/\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n
    \       {\r\n          \"expr\": \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n
    \         \"format\": \"table\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    \\\"name\\\" as \\\"container\\\", alameda_scaler_namespace as namespace, alameda_scaler_name
    as \\\"alameda scaler\\\", pod_name as pod, node_name as node, \\\"policy\\\",
    is_alameda from alameda_cluster_status..container where \\\"pod_name\\\" =~ /^[[pod]]$/
    and \\\"namespace\\\" =~ /^[[ns]]$/ group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\", \\\"pod_name\\\", \\\"name\\\" order by time desc
    limit 1\",\r\n          \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n
    \         \"resultFormat\": \"table\",\r\n          \"select\": [\r\n            [\r\n
    \             {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Containers\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"columns\": [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"fontSize\":
    \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n        \"w\": 6,\r\n
    \       \"x\": 18,\r\n        \"y\": 1\r\n      },\r\n      \"id\": 4,\r\n      \"links\":
    [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n      \"showHeader\":
    true,\r\n      \"sort\": {\r\n        \"col\": 4,\r\n        \"desc\": true\r\n
    \     },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"in_cluster\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Memory Size\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n
    \           \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n
    \           \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"node_memory_bytes\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"decbytes\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"CPU Cores\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node_cpu_cores\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Node Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"decimals\": 2,\r\n          \"pattern\":
    \"/.*/\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n
    \       {\r\n          \"expr\": \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n
    \         \"format\": \"table\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    * from alameda_cluster_status..node\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\": [\r\n
    \           [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Nodes\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"collapsed\": false,\r\n      \"gridPos\": {\r\n        \"h\":
    1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 7\r\n      },\r\n
    \     \"id\": 7,\r\n      \"panels\": [],\r\n      \"title\": \"Resource Usage
    and Recommendation of Cluster\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n
    \     \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 8\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 9,\r\n      \"interval\": \">30s\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation
    : CPU Usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU limit\",\r\n          \"color\": \"#f2c96d\",\r\n
    \         \"steppedLine\": true\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"color\": \"#7eb26d\",\r\n          \"steppedLine\":
    true\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage\",\r\n
    \         \"color\": \"#f9e2d2\",\r\n          \"dashLength\": 5,\r\n          \"dashes\":
    true,\r\n          \"spaceLength\": 4\r\n        }\r\n      ],\r\n      \"spaceLength\":
    10,\r\n      \"stack\": false,\r\n      \"steppedLine\": false,\r\n      \"targets\":
    [\r\n        {\r\n          \"alias\": \"Prediction: CPU usage\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where \\\"metric\\\" = 'cpu_usage_seconds_percentage' and \\\"name\\\" = '$container'
    and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              }\r\n            ]\r\n          ],\r\n
    \         \"tags\": [\r\n            {\r\n              \"key\": \"node\",\r\n
    \             \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"1000 * sum(max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=~\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name!=\\\"\\\", container_name!=\\\"POD\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"interval\": \"\",\r\n          \"intervalFactor\": 1,\r\n
    \         \"legendFormat\": \"Observation : CPU Usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: CPU
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_limit_cpu)
    from \\\"alameda_recommendation\\\"..\\\"container\\\" where granularity = '30'
    and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" =~ /^[[ns]]$/ AND $timeFilter
    group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU request\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": false,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    sum(mean) from (select mean(resource_request_cpu ) from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\"
    =~ /^[[ns]]$/ AND $timeFilter group by pod_name, time($recomInterval)) group by
    time($recomInterval)\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"thresholds\": [],\r\n      \"timeFrom\":
    null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\": null,\r\n      \"title\":
    \"CPU: Observation and Recommendation (in CPU milicore)\",\r\n      \"tooltip\":
    {\r\n        \"shared\": false,\r\n        \"sort\": 0,\r\n        \"value_type\":
    \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n      \"xaxis\": {\r\n
    \       \"buckets\": null,\r\n        \"mode\": \"time\",\r\n        \"name\":
    null,\r\n        \"show\": true,\r\n        \"values\": []\r\n      },\r\n      \"yaxes\":
    [\r\n        {\r\n          \"decimals\": 3,\r\n          \"format\": \"none\",\r\n
    \         \"label\": null,\r\n          \"logBase\": 1,\r\n          \"max\":
    null,\r\n          \"min\": null,\r\n          \"show\": true\r\n        },\r\n
    \       {\r\n          \"format\": \"decbytes\",\r\n          \"label\": null,\r\n
    \         \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n
    \         \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\": {\r\n        \"align\":
    false,\r\n        \"alignLevel\": null\r\n      }\r\n    },\r\n    {\r\n      \"aliasColors\":
    {},\r\n      \"bars\": false,\r\n      \"dashLength\": 10,\r\n      \"dashes\":
    false,\r\n      \"datasource\": \"-- Mixed --\",\r\n      \"fill\": 0,\r\n      \"gridPos\":
    {\r\n        \"h\": 7,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    15\r\n      },\r\n      \"height\": \"\",\r\n      \"id\": 10,\r\n      \"interval\":
    \">30s\",\r\n      \"legend\": {\r\n        \"avg\": false,\r\n        \"current\":
    false,\r\n        \"hideEmpty\": false,\r\n        \"hideZero\": false,\r\n        \"max\":
    false,\r\n        \"min\": false,\r\n        \"show\": true,\r\n        \"total\":
    false,\r\n        \"values\": false\r\n      },\r\n      \"lines\": true,\r\n
    \     \"linewidth\": 2,\r\n      \"links\": [],\r\n      \"nullPointMode\": \"null\",\r\n
    \     \"percentage\": false,\r\n      \"pointradius\": 5,\r\n      \"points\":
    false,\r\n      \"renderer\": \"flot\",\r\n      \"seriesOverrides\": [\r\n        {\r\n
    \         \"alias\": \"Observation: memory usage\",\r\n          \"color\": \"#5195ce\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"Recommendation: memory limit\",\r\n
    \         \"color\": \"#f2c96d\",\r\n          \"steppedLine\": true\r\n        },\r\n
    \       {\r\n          \"alias\": \"Recommendation: memory request\",\r\n          \"color\":
    \"#7eb26d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Prediction: memory usage\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"dashLength\": 5,\r\n          \"dashes\": true,\r\n          \"spaceLength\":
    4\r\n        }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\": false,\r\n
    \     \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [],\r\n          \"hide\": true,\r\n          \"measurement\": \"node_prediction\",\r\n
    \         \"orderByTime\": \"ASC\",\r\n          \"policy\": \"node_prediction\",\r\n
    \         \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where \\\"metric\\\" = 'memory_usage_bytes' and \\\"name\\\" = '$container' and
    \\\"pod_name\\\" = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              }\r\n            ]\r\n          ],\r\n
    \         \"tags\": [\r\n            {\r\n              \"key\": \"node\",\r\n
    \             \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"sum(max_over_time(container_memory_usage_bytes{namespace=~\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name!=\\\"\\\", container_name!=\\\"POD\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"instant\": false,\r\n          \"interval\":
    \"\",\r\n          \"intervalFactor\": 1,\r\n          \"legendFormat\": \"Observation:
    memory usage\",\r\n          \"refId\": \"C\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: memory limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_limit_memory
    ) from \\\"alameda_recommendation\\\"..\\\"container\\\" where \\\"pod_name\\\"
    =~ /^[[pod]]$/ and \\\"namespace\\\" =~ /^[[ns]]$/ AND $timeFilter group by pod_name,
    time($recomInterval)) group by time($recomInterval)\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: memory request\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_request_memory
    ) from \\\"alameda_recommendation\\\"..\\\"container\\\" where \\\"pod_name\\\"
    =~ /^[[pod]]$/ and \\\"namespace\\\" =~ /^[[ns]]$/ AND $timeFilter group by pod_name,
    time($recomInterval)) group by time($recomInterval)\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n      \"thresholds\":
    [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\":
    null,\r\n      \"title\": \"Memory: Observation and Recommendation\",\r\n      \"tooltip\":
    {\r\n        \"shared\": false,\r\n        \"sort\": 0,\r\n        \"value_type\":
    \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n      \"xaxis\": {\r\n
    \       \"buckets\": null,\r\n        \"mode\": \"time\",\r\n        \"name\":
    null,\r\n        \"show\": true,\r\n        \"values\": []\r\n      },\r\n      \"yaxes\":
    [\r\n        {\r\n          \"decimals\": null,\r\n          \"format\": \"bytes\",\r\n
    \         \"label\": null,\r\n          \"logBase\": 1,\r\n          \"max\":
    null,\r\n          \"min\": null,\r\n          \"show\": true\r\n        },\r\n
    \       {\r\n          \"format\": \"decbytes\",\r\n          \"label\": null,\r\n
    \         \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n
    \         \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\": {\r\n        \"align\":
    false,\r\n        \"alignLevel\": null\r\n      }\r\n    }\r\n  ],\r\n  \"refresh\":
    \"30s\",\r\n  \"schemaVersion\": 16,\r\n  \"style\": \"dark\",\r\n  \"tags\":
    [],\r\n  \"templating\": {\r\n    \"list\": [\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"All\",\r\n          \"value\":
    [\r\n            \"$__all\"\r\n          ]\r\n        },\r\n        \"datasource\":
    \"InfluxDB\",\r\n        \"definition\": \"select alameda_scaler_namespace,enable_VPA
    from alameda_cluster_status..container where enable_VPA = true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"hide\": 2,\r\n        \"includeAll\":
    true,\r\n        \"label\": \"Namespace\",\r\n        \"multi\": true,\r\n        \"name\":
    \"ns\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_namespace,enable_VPA
    from alameda_cluster_status..container where enable_VPA = true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"All\",\r\n          \"value\":
    [\r\n            \"$__all\"\r\n          ]\r\n        },\r\n        \"datasource\":
    \"InfluxDB\",\r\n        \"definition\": \"select alameda_scaler_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and enable_VPA= true group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\" order by time desc limit 1\",\r\n        \"hide\":
    2,\r\n        \"includeAll\": true,\r\n        \"label\": \"AlamedaScaler\",\r\n
    \       \"multi\": true,\r\n        \"name\": \"scaler\",\r\n        \"options\":
    [],\r\n        \"query\": \"select alameda_scaler_name,enable_VPA from alameda_cluster_status..container
    where \\\"alameda_scaler_namespace\\\" =~ /^[[ns]]$/ and enable_VPA= true group
    by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\" order by time
    desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\":
    false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\":
    [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\":
    false\r\n      },\r\n      {\r\n        \"allValue\": null,\r\n        \"current\":
    {\r\n          \"text\": \"All\",\r\n          \"value\": [\r\n            \"$__all\"\r\n
    \         ]\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"select pod_name,enable_VPA from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"hide\": 2,\r\n        \"includeAll\":
    true,\r\n        \"label\": \"pod\",\r\n        \"multi\": true,\r\n        \"name\":
    \"pod\",\r\n        \"options\": [],\r\n        \"query\": \"select pod_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"current\":
    {\r\n          \"text\": \"15m\",\r\n          \"value\": \"15m\"\r\n        },\r\n
    \       \"hide\": 2,\r\n        \"label\": null,\r\n        \"name\": \"recomInterval\",\r\n
    \       \"options\": [\r\n          {\r\n            \"selected\": true,\r\n            \"text\":
    \"15m\",\r\n            \"value\": \"15m\"\r\n          }\r\n        ],\r\n        \"query\":
    \"15m\",\r\n        \"skipUrlSync\": false,\r\n        \"type\": \"constant\"\r\n
    \     }\r\n    ]\r\n  },\r\n  \"time\": {\r\n    \"from\": \"now-2h\",\r\n    \"to\":
    \"now\"\r\n  },\r\n  \"timepicker\": {\r\n    \"refresh_intervals\": [\r\n      \"5s\",\r\n
    \     \"10s\",\r\n      \"30s\",\r\n      \"1m\",\r\n      \"5m\",\r\n      \"15m\",\r\n
    \     \"30m\",\r\n      \"1h\",\r\n      \"2h\",\r\n      \"1d\"\r\n    ],\r\n
    \   \"time_options\": [\r\n      \"5m\",\r\n      \"15m\",\r\n      \"1h\",\r\n
    \     \"6h\",\r\n      \"12h\",\r\n      \"24h\",\r\n      \"2d\",\r\n      \"7d\",\r\n
    \     \"30d\"\r\n    ]\r\n  },\r\n  \"timezone\": \"\",\r\n  \"title\": \"Cluster-Wide
    VPA Resource Recommendations\",\r\n  \"uid\": \"addqwe\",\r\n  \"version\": 4\r\n}"
  vpa-recommendation-namespace.json: "{\r\n  \"annotations\": {\r\n    \"list\": [\r\n
    \     {\r\n        \"builtIn\": 1,\r\n        \"datasource\": \"-- Grafana --\",\r\n
    \       \"enable\": true,\r\n        \"hide\": true,\r\n        \"iconColor\":
    \"rgba(0, 211, 255, 1)\",\r\n        \"limit\": 100,\r\n        \"name\": \"Annotations
    & Alerts\",\r\n        \"showIn\": 0,\r\n        \"type\": \"dashboard\"\r\n      }\r\n
    \   ]\r\n  },\r\n  \"editable\": true,\r\n  \"gnetId\": null,\r\n  \"graphTooltip\":
    0,\r\n  \"id\": 12,\r\n  \"iteration\": 1560761281179,\r\n  \"links\": [],\r\n
    \ \"panels\": [\r\n    {\r\n      \"collapsed\": false,\r\n      \"gridPos\":
    {\r\n        \"h\": 1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    0\r\n      },\r\n      \"id\": 12,\r\n      \"panels\": [],\r\n      \"title\":
    \"Managed Objects\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n      \"columns\":
    [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"description\": \"\",\r\n
    \     \"fontSize\": \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n
    \       \"w\": 18,\r\n        \"x\": 0,\r\n        \"y\": 1\r\n      },\r\n      \"id\":
    5,\r\n      \"links\": [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n
    \     \"showHeader\": true,\r\n      \"sort\": {\r\n        \"col\": 7,\r\n        \"desc\":
    true\r\n      },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"is_alameda\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"decgbytes\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_namespace\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_name\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod_name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"AlamedaScaler Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"alameda scaler\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Project (Namespace)\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"namespace\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Pod Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Container Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"container\",\r\n          \"thresholds\": [],\r\n
    \         \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Node Name\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Policy\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"policy\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"decimals\": 2,\r\n          \"pattern\": \"/.*/\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n          \"format\": \"table\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"intervalFactor\":
    1,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select \\\"name\\\" as \\\"container\\\", alameda_scaler_namespace
    as namespace, alameda_scaler_name as \\\"alameda scaler\\\", pod_name as pod,
    node_name as node, \\\"policy\\\", is_alameda from alameda_cluster_status..container
    where \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" =~ /^[[ns]]$/ group
    by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\", \\\"pod_name\\\",
    \\\"name\\\" order by time desc limit 1\",\r\n          \"rawQuery\": true,\r\n
    \         \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Containers\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"columns\": [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"fontSize\":
    \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n        \"w\": 6,\r\n
    \       \"x\": 18,\r\n        \"y\": 1\r\n      },\r\n      \"id\": 4,\r\n      \"links\":
    [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n      \"showHeader\":
    true,\r\n      \"sort\": {\r\n        \"col\": 4,\r\n        \"desc\": true\r\n
    \     },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"in_cluster\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Memory Size\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n
    \           \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n
    \           \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"node_memory_bytes\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"decbytes\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"CPU Cores\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node_cpu_cores\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Node Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"decimals\": 2,\r\n          \"pattern\":
    \"/.*/\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n
    \       {\r\n          \"expr\": \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n
    \         \"format\": \"table\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    * from alameda_cluster_status..node\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\": [\r\n
    \           [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Nodes\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"collapsed\": false,\r\n      \"gridPos\": {\r\n        \"h\":
    1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 7\r\n      },\r\n
    \     \"id\": 7,\r\n      \"panels\": [],\r\n      \"title\": \"Resource Usage
    and Recommendation of Namespace\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n
    \     \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 8\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 9,\r\n      \"interval\": \">30s\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation
    : CPU Usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU limit\",\r\n          \"color\": \"#f2c96d\",\r\n
    \         \"steppedLine\": true\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"color\": \"#7eb26d\",\r\n          \"steppedLine\":
    true\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage\",\r\n
    \         \"color\": \"#f9e2d2\",\r\n          \"dashLength\": 5,\r\n          \"dashes\":
    true,\r\n          \"spaceLength\": 4\r\n        }\r\n      ],\r\n      \"spaceLength\":
    10,\r\n      \"stack\": false,\r\n      \"steppedLine\": false,\r\n      \"targets\":
    [\r\n        {\r\n          \"alias\": \"Prediction: CPU usage\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where \\\"metric\\\" = 'cpu_usage_seconds_percentage' and \\\"name\\\" = '$container'
    and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              }\r\n            ]\r\n          ],\r\n
    \         \"tags\": [\r\n            {\r\n              \"key\": \"node\",\r\n
    \             \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"1000 * sum(max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=~\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name!=\\\"\\\", container_name!=\\\"POD\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"intervalFactor\": 1,\r\n          \"legendFormat\": \"Observation
    : CPU Usage\",\r\n          \"refId\": \"C\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_limit_cpu)
    from \\\"alameda_recommendation\\\"..\\\"container\\\" where granularity = '30'
    and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" =~ /^[[ns]]$/ AND $timeFilter
    group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU request\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": false,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    sum(mean) from (select mean(resource_request_cpu ) from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\"
    =~ /^[[ns]]$/ AND $timeFilter group by pod_name, time($recomInterval)) group by
    time($recomInterval)\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"thresholds\": [],\r\n      \"timeFrom\":
    null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\": null,\r\n      \"title\":
    \"CPU: Observation and Recommendation (in CPU milicore)\",\r\n      \"tooltip\":
    {\r\n        \"shared\": false,\r\n        \"sort\": 0,\r\n        \"value_type\":
    \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n      \"xaxis\": {\r\n
    \       \"buckets\": null,\r\n        \"mode\": \"time\",\r\n        \"name\":
    null,\r\n        \"show\": true,\r\n        \"values\": []\r\n      },\r\n      \"yaxes\":
    [\r\n        {\r\n          \"decimals\": 3,\r\n          \"format\": \"none\",\r\n
    \         \"label\": null,\r\n          \"logBase\": 1,\r\n          \"max\":
    null,\r\n          \"min\": null,\r\n          \"show\": true\r\n        },\r\n
    \       {\r\n          \"format\": \"decbytes\",\r\n          \"label\": null,\r\n
    \         \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n
    \         \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\": {\r\n        \"align\":
    false,\r\n        \"alignLevel\": null\r\n      }\r\n    },\r\n    {\r\n      \"aliasColors\":
    {},\r\n      \"bars\": false,\r\n      \"dashLength\": 10,\r\n      \"dashes\":
    false,\r\n      \"datasource\": \"-- Mixed --\",\r\n      \"fill\": 0,\r\n      \"gridPos\":
    {\r\n        \"h\": 7,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    15\r\n      },\r\n      \"height\": \"\",\r\n      \"id\": 10,\r\n      \"interval\":
    \">30s\",\r\n      \"legend\": {\r\n        \"avg\": false,\r\n        \"current\":
    false,\r\n        \"hideEmpty\": false,\r\n        \"hideZero\": false,\r\n        \"max\":
    false,\r\n        \"min\": false,\r\n        \"show\": true,\r\n        \"total\":
    false,\r\n        \"values\": false\r\n      },\r\n      \"lines\": true,\r\n
    \     \"linewidth\": 2,\r\n      \"links\": [],\r\n      \"nullPointMode\": \"null\",\r\n
    \     \"percentage\": false,\r\n      \"pointradius\": 5,\r\n      \"points\":
    false,\r\n      \"renderer\": \"flot\",\r\n      \"seriesOverrides\": [\r\n        {\r\n
    \         \"alias\": \"Observation: memory usage\",\r\n          \"color\": \"#5195ce\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"Recommendation: memory limit\",\r\n
    \         \"color\": \"#f2c96d\",\r\n          \"steppedLine\": true\r\n        },\r\n
    \       {\r\n          \"alias\": \"Recommendation: memory request\",\r\n          \"color\":
    \"#7eb26d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Prediction: memory usage\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"dashLength\": 5,\r\n          \"dashes\": true,\r\n          \"spaceLength\":
    4\r\n        }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\": false,\r\n
    \     \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [],\r\n          \"hide\": true,\r\n          \"measurement\": \"node_prediction\",\r\n
    \         \"orderByTime\": \"ASC\",\r\n          \"policy\": \"node_prediction\",\r\n
    \         \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where \\\"metric\\\" = 'memory_usage_bytes' and \\\"name\\\" = '$container' and
    \\\"pod_name\\\" = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              }\r\n            ]\r\n          ],\r\n
    \         \"tags\": [\r\n            {\r\n              \"key\": \"node\",\r\n
    \             \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"sum(max_over_time(container_memory_usage_bytes{namespace=~\\\"$ns\\\",
    pod_name=~\\\"$pod\\\", container_name!=\\\"\\\", container_name!=\\\"POD\\\"}[30s]))\",\r\n
    \         \"format\": \"time_series\",\r\n          \"instant\": false,\r\n          \"intervalFactor\":
    1,\r\n          \"legendFormat\": \"Observation: memory usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: memory
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select sum(mean) from (select mean(resource_limit_memory
    ) from \\\"alameda_recommendation\\\"..\\\"container\\\" where granularity = '30'
    and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\" =~ /^[[ns]]$/ AND $timeFilter
    group by pod_name, time($recomInterval)) group by time($recomInterval)\",\r\n
    \         \"rawQuery\": true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\":
    \"time_series\",\r\n          \"select\": [\r\n            [\r\n              {\r\n
    \               \"params\": [\r\n                  \"value\"\r\n                ],\r\n
    \               \"type\": \"field\"\r\n              },\r\n              {\r\n
    \               \"params\": [],\r\n                \"type\": \"mean\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory request\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [\r\n            {\r\n              \"params\":
    [\r\n                \"$__interval\"\r\n              ],\r\n              \"type\":
    \"time\"\r\n            },\r\n            {\r\n              \"params\": [\r\n
    \               \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"hide\": false,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    sum(mean) from (select mean(resource_request_memory ) from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"pod_name\\\" =~ /^[[pod]]$/ and \\\"namespace\\\"
    =~ /^[[ns]]$/ AND $timeFilter group by pod_name, time($recomInterval)) group by
    time($recomInterval)\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"thresholds\": [],\r\n      \"timeFrom\":
    null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\": null,\r\n      \"title\":
    \"Memory: Observation and Recommendation\",\r\n      \"tooltip\": {\r\n        \"shared\":
    false,\r\n        \"sort\": 0,\r\n        \"value_type\": \"individual\"\r\n      },\r\n
    \     \"type\": \"graph\",\r\n      \"xaxis\": {\r\n        \"buckets\": null,\r\n
    \       \"mode\": \"time\",\r\n        \"name\": null,\r\n        \"show\": true,\r\n
    \       \"values\": []\r\n      },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\":
    null,\r\n          \"format\": \"bytes\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   }\r\n  ],\r\n  \"refresh\": \"30s\",\r\n  \"schemaVersion\": 16,\r\n  \"style\":
    \"dark\",\r\n  \"tags\": [],\r\n  \"templating\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"allValue\": null,\r\n        \"current\": {\r\n          \"text\": \"webapp\",\r\n
    \         \"value\": \"webapp\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n
    \       \"definition\": \"select alameda_scaler_namespace,enable_HPA from alameda_cluster_status..container
    where enable_VPA = true group by \\\"alameda_scaler_namespace\\\" order by time
    desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\": false,\r\n
    \       \"label\": \"Namespace\",\r\n        \"multi\": false,\r\n        \"name\":
    \"ns\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_namespace,enable_HPA
    from alameda_cluster_status..container where enable_VPA = true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"All\",\r\n          \"value\":
    [\r\n            \"$__all\"\r\n          ]\r\n        },\r\n        \"datasource\":
    \"InfluxDB\",\r\n        \"definition\": \"select alameda_scaler_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and enable_VPA= true group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\" order by time desc limit 1\",\r\n        \"hide\":
    2,\r\n        \"includeAll\": true,\r\n        \"label\": \"AlamedaScaler\",\r\n
    \       \"multi\": true,\r\n        \"name\": \"scaler\",\r\n        \"options\":
    [],\r\n        \"query\": \"select alameda_scaler_name,enable_VPA from alameda_cluster_status..container
    where \\\"alameda_scaler_namespace\\\" =~ /^[[ns]]$/ and enable_VPA= true group
    by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\" order by time
    desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\":
    false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\":
    [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\":
    false\r\n      },\r\n      {\r\n        \"allValue\": null,\r\n        \"current\":
    {\r\n          \"text\": \"All\",\r\n          \"value\": \"$__all\"\r\n        },\r\n
    \       \"datasource\": \"InfluxDB\",\r\n        \"definition\": \"select pod_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"hide\": 2,\r\n        \"includeAll\":
    true,\r\n        \"label\": \"pod\",\r\n        \"multi\": true,\r\n        \"name\":
    \"pod\",\r\n        \"options\": [],\r\n        \"query\": \"select pod_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"current\":
    {\r\n          \"text\": \"15m\",\r\n          \"value\": \"15m\"\r\n        },\r\n
    \       \"hide\": 2,\r\n        \"label\": null,\r\n        \"name\": \"recomInterval\",\r\n
    \       \"options\": [\r\n          {\r\n            \"selected\": true,\r\n            \"text\":
    \"15m\",\r\n            \"value\": \"15m\"\r\n          }\r\n        ],\r\n        \"query\":
    \"15m\",\r\n        \"skipUrlSync\": false,\r\n        \"type\": \"constant\"\r\n
    \     }\r\n    ]\r\n  },\r\n  \"time\": {\r\n    \"from\": \"now-2h\",\r\n    \"to\":
    \"now\"\r\n  },\r\n  \"timepicker\": {\r\n    \"refresh_intervals\": [\r\n      \"5s\",\r\n
    \     \"10s\",\r\n      \"30s\",\r\n      \"1m\",\r\n      \"5m\",\r\n      \"15m\",\r\n
    \     \"30m\",\r\n      \"1h\",\r\n      \"2h\",\r\n      \"1d\"\r\n    ],\r\n
    \   \"time_options\": [\r\n      \"5m\",\r\n      \"15m\",\r\n      \"1h\",\r\n
    \     \"6h\",\r\n      \"12h\",\r\n      \"24h\",\r\n      \"2d\",\r\n      \"7d\",\r\n
    \     \"30d\"\r\n    ]\r\n  },\r\n  \"timezone\": \"\",\r\n  \"title\": \"Per
    Namespace VPA Resource Recommendations\",\r\n  \"uid\": \"addaewe\",\r\n  \"version\":
    3\r\n}"
  vpa-recommendation.json: "{\r\n  \"annotations\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"builtIn\": 1,\r\n        \"datasource\": \"-- Grafana --\",\r\n        \"enable\":
    true,\r\n        \"hide\": true,\r\n        \"iconColor\": \"rgba(0, 211, 255,
    1)\",\r\n        \"name\": \"Annotations & Alerts\",\r\n        \"type\": \"dashboard\"\r\n
    \     }\r\n    ]\r\n  },\r\n  \"editable\": true,\r\n  \"gnetId\": null,\r\n  \"graphTooltip\":
    0,\r\n  \"id\": 13,\r\n  \"iteration\": 1560761297688,\r\n  \"links\": [],\r\n
    \ \"panels\": [\r\n    {\r\n      \"collapsed\": false,\r\n      \"gridPos\":
    {\r\n        \"h\": 1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\":
    0\r\n      },\r\n      \"id\": 12,\r\n      \"panels\": [],\r\n      \"title\":
    \"Managed Objects\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n      \"columns\":
    [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"description\": \"\",\r\n
    \     \"fontSize\": \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n
    \       \"w\": 18,\r\n        \"x\": 0,\r\n        \"y\": 1\r\n      },\r\n      \"id\":
    5,\r\n      \"links\": [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n
    \     \"showHeader\": true,\r\n      \"sort\": {\r\n        \"col\": 0,\r\n        \"desc\":
    true\r\n      },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"is_alameda\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"decgbytes\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_namespace\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"alameda_scaler_name\",\r\n          \"thresholds\": [],\r\n          \"type\":
    \"hidden\",\r\n          \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod_name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"AlamedaScaler Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"alameda scaler\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Project (Namespace)\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"namespace\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Pod Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"pod\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Container Name\",\r\n          \"colorMode\": null,\r\n          \"colors\":
    [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40,
    0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"container\",\r\n          \"thresholds\": [],\r\n
    \         \"type\": \"string\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Node Name\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"short\"\r\n        },\r\n
    \       {\r\n          \"alias\": \"Policy\",\r\n          \"colorMode\": null,\r\n
    \         \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237,
    129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    2,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"policy\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"string\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"decimals\": 2,\r\n          \"pattern\": \"/.*/\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n        {\r\n          \"expr\":
    \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n          \"format\": \"table\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"intervalFactor\":
    1,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select \\\"name\\\" as \\\"container\\\", alameda_scaler_namespace
    as namespace, alameda_scaler_name as \\\"alameda scaler\\\", pod_name as pod,
    node_name as node, \\\"policy\\\", is_alameda from alameda_cluster_status..container
    where enable_VPA= true group by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\",
    \\\"pod_name\\\", \\\"name\\\" order by time desc limit 1\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"table\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        }\r\n      ],\r\n      \"title\":
    \"Managed Containers by VPA scaling Tool\",\r\n      \"transform\": \"table\",\r\n
    \     \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n    {\r\n
    \     \"columns\": [],\r\n      \"datasource\": \"InfluxDB\",\r\n      \"fontSize\":
    \"100%\",\r\n      \"gridPos\": {\r\n        \"h\": 6,\r\n        \"w\": 6,\r\n
    \       \"x\": 18,\r\n        \"y\": 1\r\n      },\r\n      \"id\": 4,\r\n      \"links\":
    [],\r\n      \"pageSize\": null,\r\n      \"scroll\": true,\r\n      \"showHeader\":
    true,\r\n      \"sort\": {\r\n        \"col\": 4,\r\n        \"desc\": true\r\n
    \     },\r\n      \"styles\": [\r\n        {\r\n          \"alias\": \"Time\",\r\n
    \         \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"pattern\": \"Time\",\r\n
    \         \"type\": \"hidden\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"in_cluster\",\r\n          \"thresholds\": [],\r\n          \"type\": \"hidden\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"Memory Size\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n
    \           \"rgba(245, 54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n
    \           \"rgba(50, 172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\":
    \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\": 2,\r\n          \"mappingType\":
    1,\r\n          \"pattern\": \"node_memory_bytes\",\r\n          \"thresholds\":
    [],\r\n          \"type\": \"number\",\r\n          \"unit\": \"decbytes\"\r\n
    \       },\r\n        {\r\n          \"alias\": \"CPU Cores\",\r\n          \"colorMode\":
    null,\r\n          \"colors\": [\r\n            \"rgba(245, 54, 54, 0.9)\",\r\n
    \           \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50, 172, 45, 0.97)\"\r\n
    \         ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n          \"decimals\":
    0,\r\n          \"mappingType\": 1,\r\n          \"pattern\": \"node_cpu_cores\",\r\n
    \         \"thresholds\": [],\r\n          \"type\": \"number\",\r\n          \"unit\":
    \"short\"\r\n        },\r\n        {\r\n          \"alias\": \"Node Name\",\r\n
    \         \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\",\r\n
    \         \"decimals\": 2,\r\n          \"mappingType\": 1,\r\n          \"pattern\":
    \"name\",\r\n          \"thresholds\": [],\r\n          \"type\": \"string\",\r\n
    \         \"unit\": \"short\"\r\n        },\r\n        {\r\n          \"alias\":
    \"\",\r\n          \"colorMode\": null,\r\n          \"colors\": [\r\n            \"rgba(245,
    54, 54, 0.9)\",\r\n            \"rgba(237, 129, 40, 0.89)\",\r\n            \"rgba(50,
    172, 45, 0.97)\"\r\n          ],\r\n          \"decimals\": 2,\r\n          \"pattern\":
    \"/.*/\",\r\n          \"thresholds\": [],\r\n          \"type\": \"number\",\r\n
    \         \"unit\": \"short\"\r\n        }\r\n      ],\r\n      \"targets\": [\r\n
    \       {\r\n          \"expr\": \"count(up{job=\\\"kubernetes-nodes\\\"})\",\r\n
    \         \"format\": \"table\",\r\n          \"groupBy\": [\r\n            {\r\n
    \             \"params\": [\r\n                \"$__interval\"\r\n              ],\r\n
    \             \"type\": \"time\"\r\n            },\r\n            {\r\n              \"params\":
    [\r\n                \"null\"\r\n              ],\r\n              \"type\": \"fill\"\r\n
    \           }\r\n          ],\r\n          \"intervalFactor\": 1,\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"default\",\r\n          \"query\": \"select
    * from alameda_cluster_status..node\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"table\",\r\n          \"select\": [\r\n
    \           [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              },\r\n
    \             {\r\n                \"params\": [],\r\n                \"type\":
    \"mean\"\r\n              }\r\n            ]\r\n          ],\r\n          \"tags\":
    []\r\n        }\r\n      ],\r\n      \"title\": \"Managed Nodes\",\r\n      \"transform\":
    \"table\",\r\n      \"transparent\": false,\r\n      \"type\": \"table\"\r\n    },\r\n
    \   {\r\n      \"collapsed\": false,\r\n      \"gridPos\": {\r\n        \"h\":
    1,\r\n        \"w\": 24,\r\n        \"x\": 0,\r\n        \"y\": 7\r\n      },\r\n
    \     \"id\": 7,\r\n      \"panels\": [],\r\n      \"title\": \"Container Resource
    Usage and Recommendation\",\r\n      \"type\": \"row\"\r\n    },\r\n    {\r\n
    \     \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 8\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 9,\r\n      \"interval\": \">30s\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation
    : CPU Usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: CPU limit\",\r\n          \"color\": \"#f2c96d\",\r\n
    \         \"steppedLine\": true\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"color\": \"#7eb26d\",\r\n          \"steppedLine\":
    true\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage
    (in 15m)\",\r\n          \"color\": \"#f9e2d2\",\r\n          \"dashLength\":
    5,\r\n          \"dashes\": true,\r\n          \"spaceLength\": 4\r\n        },\r\n
    \       {\r\n          \"alias\": \"Prediction: CPU usage upperbound (in 15m)\",\r\n
    \         \"color\": \"#f9e2d2\",\r\n          \"fillBelowTo\": \"Prediction:
    CPU usage lowerbound (in 15m)\",\r\n          \"hideTooltip\": true,\r\n          \"legend\":
    false,\r\n          \"lines\": false\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 15m)\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"hideTooltip\": false,\r\n          \"legend\": false,\r\n          \"lines\":
    false\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: CPU usage
    (in 1d)\",\r\n          \"color\": \"#f29191\",\r\n          \"dashLength\": 5,\r\n
    \         \"dashes\": true,\r\n          \"spaceLength\": 4\r\n        },\r\n
    \       {\r\n          \"alias\": \"Prediction: CPU usage upperbound (in 1d)\",\r\n
    \         \"color\": \"#f29191\",\r\n          \"dashLength\": 5,\r\n          \"dashes\":
    true,\r\n          \"spaceLength\": 4\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 1d)\",\r\n          \"color\": \"#f29191\",\r\n
    \         \"dashLength\": 5,\r\n          \"dashes\": true,\r\n          \"spaceLength\":
    4\r\n        }\r\n      ],\r\n      \"spaceLength\": 10,\r\n      \"stack\": false,\r\n
    \     \"steppedLine\": false,\r\n      \"targets\": [\r\n        {\r\n          \"datasource\":
    \"Prometheus\",\r\n          \"expr\": \"1000 * max_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=\\\"$ns\\\",
    pod_name=\\\"$pod\\\", container_name=\\\"$container\\\", container_name!=\\\"\\\"}[30s])\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"interval\": \"30s\",\r\n          \"intervalFactor\": 1,\r\n
    \         \"legendFormat\": \"Observation : CPU Usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: CPU
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_limit_cpu from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"A\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: CPU request\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_request_cpu from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '30' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"B\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage upperbound (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '30' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"F\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'lower_bound' and granularity = '30' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"G\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '3600' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"E\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage upperbound (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '3600' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"H\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: CPU usage lowerbound (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'lower_bound' and granularity = '3600' and \\\"metric\\\" = 'cpu_usage_seconds_percentage'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"I\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        }\r\n      ],\r\n      \"thresholds\":
    [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\":
    null,\r\n      \"title\": \"Container CPU: Observation, Prediction, and Recommendation
    (in CPU milicore)\",\r\n      \"tooltip\": {\r\n        \"shared\": false,\r\n
    \       \"sort\": 0,\r\n        \"value_type\": \"individual\"\r\n      },\r\n
    \     \"type\": \"graph\",\r\n      \"xaxis\": {\r\n        \"buckets\": null,\r\n
    \       \"mode\": \"time\",\r\n        \"name\": null,\r\n        \"show\": true,\r\n
    \       \"values\": []\r\n      },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\":
    3,\r\n          \"format\": \"none\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   },\r\n    {\r\n      \"aliasColors\": {},\r\n      \"bars\": false,\r\n      \"dashLength\":
    10,\r\n      \"dashes\": false,\r\n      \"datasource\": \"-- Mixed --\",\r\n
    \     \"fill\": 0,\r\n      \"gridPos\": {\r\n        \"h\": 7,\r\n        \"w\":
    24,\r\n        \"x\": 0,\r\n        \"y\": 15\r\n      },\r\n      \"height\":
    \"\",\r\n      \"id\": 10,\r\n      \"interval\": \">30s\",\r\n      \"legend\":
    {\r\n        \"avg\": false,\r\n        \"current\": false,\r\n        \"hideEmpty\":
    false,\r\n        \"hideZero\": false,\r\n        \"max\": false,\r\n        \"min\":
    false,\r\n        \"show\": true,\r\n        \"total\": false,\r\n        \"values\":
    false\r\n      },\r\n      \"lines\": true,\r\n      \"linewidth\": 2,\r\n      \"links\":
    [],\r\n      \"nullPointMode\": \"null\",\r\n      \"percentage\": false,\r\n
    \     \"pointradius\": 5,\r\n      \"points\": false,\r\n      \"renderer\": \"flot\",\r\n
    \     \"seriesOverrides\": [\r\n        {\r\n          \"alias\": \"Observation:
    memory usage\",\r\n          \"color\": \"#5195ce\"\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory limit\",\r\n          \"color\":
    \"#f2c96d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Recommendation: memory request\",\r\n          \"color\":
    \"#7eb26d\",\r\n          \"steppedLine\": true\r\n        },\r\n        {\r\n
    \         \"alias\": \"Prediction: memory usage (in 15m)\",\r\n          \"color\":
    \"#f9e2d2\",\r\n          \"dashLength\": 5,\r\n          \"dashes\": true,\r\n
    \         \"spaceLength\": 4\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (in 15m)\",\r\n          \"color\": \"#f9e2d2\",\r\n
    \         \"fillBelowTo\": \"Prediction: memory usage lowerbound (in 15m)\",\r\n
    \         \"hideTooltip\": false,\r\n          \"legend\": false,\r\n          \"lines\":
    false\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: memory
    usage lowerbound (in 15m)\",\r\n          \"color\": \"#f9e2d2\",\r\n          \"hideTooltip\":
    false,\r\n          \"legend\": false,\r\n          \"lines\": false\r\n        },\r\n
    \       {\r\n          \"alias\": \"Prediction: memory usage (in 1d)\",\r\n          \"color\":
    \"#f29191\",\r\n          \"dashLength\": 5,\r\n          \"dashes\": true,\r\n
    \         \"spaceLength\": 4\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (in 1d)\",\r\n          \"color\": \"#f29191\",\r\n
    \         \"dashLength\": 5,\r\n          \"dashes\": true,\r\n          \"spaceLength\":
    4\r\n        },\r\n        {\r\n          \"alias\": \"Prediction: memory usage
    lowerbound (in 1d)\",\r\n          \"color\": \"#f29191\",\r\n          \"dashLength\":
    5,\r\n          \"dashes\": true,\r\n          \"spaceLength\": 4\r\n        }\r\n
    \     ],\r\n      \"spaceLength\": 10,\r\n      \"stack\": false,\r\n      \"steppedLine\":
    false,\r\n      \"targets\": [\r\n        {\r\n          \"datasource\": \"Prometheus\",\r\n
    \         \"expr\": \"max_over_time(container_memory_usage_bytes{namespace=\\\"$ns\\\",
    pod_name=\\\"$pod\\\", container_name=\\\"$container\\\", container_name!=\\\"\\\"}[30s])\",\r\n
    \         \"format\": \"time_series\",\r\n          \"hide\": false,\r\n          \"instant\":
    false,\r\n          \"interval\": \"30s\",\r\n          \"intervalFactor\": 1,\r\n
    \         \"legendFormat\": \"Observation: memory usage\",\r\n          \"refId\":
    \"C\"\r\n        },\r\n        {\r\n          \"alias\": \"Recommendation: memory
    limit\",\r\n          \"datasource\": \"InfluxDB\",\r\n          \"groupBy\":
    [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_limit_memory from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"B\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Recommendation: memory request\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [\r\n            {\r\n              \"params\": [\r\n                \"$__interval\"\r\n
    \             ],\r\n              \"type\": \"time\"\r\n            },\r\n            {\r\n
    \             \"params\": [\r\n                \"null\"\r\n              ],\r\n
    \             \"type\": \"fill\"\r\n            }\r\n          ],\r\n          \"hide\":
    false,\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\": \"default\",\r\n
    \         \"query\": \"select resource_request_memory from \\\"alameda_recommendation\\\"..\\\"container\\\"
    where granularity = '30' and \\\"name\\\" = '$container' and \\\"pod_name\\\"
    = '$pod' and \\\"namespace\\\" = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\":
    true,\r\n          \"refId\": \"D\",\r\n          \"resultFormat\": \"time_series\",\r\n
    \         \"select\": [\r\n            [\r\n              {\r\n                \"params\":
    [\r\n                  \"value\"\r\n                ],\r\n                \"type\":
    \"field\"\r\n              },\r\n              {\r\n                \"params\":
    [],\r\n                \"type\": \"mean\"\r\n              }\r\n            ]\r\n
    \         ],\r\n          \"tags\": []\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage (in 15m)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": false,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '30' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"A\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (in 15m)\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": false,\r\n
    \         \"measurement\": \"node_prediction\",\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"node_prediction\",\r\n          \"query\":
    \"select value from \\\"alameda_prediction\\\"..\\\"container\\\" where kind =
    'upper_bound' and granularity = '30' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"E\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage lowerbound (in 15m)\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": false,\r\n
    \         \"measurement\": \"node_prediction\",\r\n          \"orderByTime\":
    \"ASC\",\r\n          \"policy\": \"node_prediction\",\r\n          \"query\":
    \"select value from \\\"alameda_prediction\\\"..\\\"container\\\" where kind =
    'lower_bound' and granularity = '30' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"F\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage (in 1d)\",\r\n          \"datasource\": \"InfluxDB\",\r\n
    \         \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'raw' and granularity = '3600' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'  AND $timeFilter\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"G\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage upperbound (in 1d)\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '3600' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"H\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        },\r\n        {\r\n          \"alias\":
    \"Prediction: memory usage lowerbound (in 1d)\",\r\n          \"datasource\":
    \"InfluxDB\",\r\n          \"groupBy\": [],\r\n          \"hide\": true,\r\n          \"measurement\":
    \"node_prediction\",\r\n          \"orderByTime\": \"ASC\",\r\n          \"policy\":
    \"node_prediction\",\r\n          \"query\": \"select value from \\\"alameda_prediction\\\"..\\\"container\\\"
    where kind = 'upper_bound' and granularity = '3600' and \\\"metric\\\" = 'memory_usage_bytes'
    and \\\"name\\\" = '$container' and \\\"pod_name\\\" = '$pod' and \\\"namespace\\\"
    = '$ns'   AND time >= now()\",\r\n          \"rawQuery\": true,\r\n          \"refId\":
    \"I\",\r\n          \"resultFormat\": \"time_series\",\r\n          \"select\":
    [\r\n            [\r\n              {\r\n                \"params\": [\r\n                  \"value\"\r\n
    \               ],\r\n                \"type\": \"field\"\r\n              }\r\n
    \           ]\r\n          ],\r\n          \"tags\": [\r\n            {\r\n              \"key\":
    \"node\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"ip-172-23-1-91.us-east-2.compute.internal\"\r\n
    \           },\r\n            {\r\n              \"condition\": \"AND\",\r\n              \"key\":
    \"type\",\r\n              \"operator\": \"=\",\r\n              \"value\": \"cpu\"\r\n
    \           }\r\n          ]\r\n        }\r\n      ],\r\n      \"thresholds\":
    [],\r\n      \"timeFrom\": null,\r\n      \"timeRegions\": [],\r\n      \"timeShift\":
    null,\r\n      \"title\": \"Container Memory: Observation, Prediction, and Recommendation\",\r\n
    \     \"tooltip\": {\r\n        \"shared\": false,\r\n        \"sort\": 0,\r\n
    \       \"value_type\": \"individual\"\r\n      },\r\n      \"type\": \"graph\",\r\n
    \     \"xaxis\": {\r\n        \"buckets\": null,\r\n        \"mode\": \"time\",\r\n
    \       \"name\": null,\r\n        \"show\": true,\r\n        \"values\": []\r\n
    \     },\r\n      \"yaxes\": [\r\n        {\r\n          \"decimals\": null,\r\n
    \         \"format\": \"bytes\",\r\n          \"label\": null,\r\n          \"logBase\":
    1,\r\n          \"max\": null,\r\n          \"min\": null,\r\n          \"show\":
    true\r\n        },\r\n        {\r\n          \"format\": \"decbytes\",\r\n          \"label\":
    null,\r\n          \"logBase\": 1,\r\n          \"max\": null,\r\n          \"min\":
    null,\r\n          \"show\": false\r\n        }\r\n      ],\r\n      \"yaxis\":
    {\r\n        \"align\": false,\r\n        \"alignLevel\": null\r\n      }\r\n
    \   }\r\n  ],\r\n  \"refresh\": \"30s\",\r\n  \"schemaVersion\": 16,\r\n  \"style\":
    \"dark\",\r\n  \"tags\": [],\r\n  \"templating\": {\r\n    \"list\": [\r\n      {\r\n
    \       \"allValue\": null,\r\n        \"current\": {\r\n          \"text\": \"webapp\",\r\n
    \         \"value\": \"webapp\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n
    \       \"definition\": \"select alameda_scaler_namespace,enable_VPA from alameda_cluster_status..container
    where enable_VPA = true group by \\\"alameda_scaler_namespace\\\" order by time
    desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\": false,\r\n
    \       \"label\": \"Namespace\",\r\n        \"multi\": false,\r\n        \"name\":
    \"ns\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_namespace,enable_VPA
    from alameda_cluster_status..container where enable_VPA = true group by \\\"alameda_scaler_namespace\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"influxdb-app\",\r\n          \"value\":
    \"influxdb-app\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"select alameda_scaler_name,enable_VPA from alameda_cluster_status..container
    where \\\"alameda_scaler_namespace\\\" =~ /^[[ns]]$/ and enable_VPA= true group
    by \\\"alameda_scaler_namespace\\\", \\\"alameda_scaler_name\\\" order by time
    desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\": false,\r\n
    \       \"label\": \"AlamedaScaler\",\r\n        \"multi\": false,\r\n        \"name\":
    \"scaler\",\r\n        \"options\": [],\r\n        \"query\": \"select alameda_scaler_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and enable_VPA= true group by \\\"alameda_scaler_namespace\\\",
    \\\"alameda_scaler_name\\\" order by time desc limit 1\",\r\n        \"refresh\":
    2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\":
    0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\":
    \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\": false\r\n      },\r\n
    \     {\r\n        \"allValue\": null,\r\n        \"current\": {\r\n          \"text\":
    \"influxdb-0-7bcfd4f68-fdd57\",\r\n          \"value\": \"influxdb-0-7bcfd4f68-fdd57\"\r\n
    \       },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"select pod_name,enable_VPA from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"hide\": 0,\r\n        \"includeAll\":
    false,\r\n        \"label\": \"pod\",\r\n        \"multi\": false,\r\n        \"name\":
    \"pod\",\r\n        \"options\": [],\r\n        \"query\": \"select pod_name,enable_VPA
    from alameda_cluster_status..container where \\\"alameda_scaler_namespace\\\"
    =~ /^[[ns]]$/ and \\\"alameda_scaler_name\\\" =~ /^[[scaler]]$/ group by \\\"pod_name\\\"
    order by time desc limit 1\",\r\n        \"refresh\": 2,\r\n        \"regex\":
    \"\",\r\n        \"skipUrlSync\": false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\":
    \"\",\r\n        \"tags\": [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\":
    \"query\",\r\n        \"useTags\": false\r\n      },\r\n      {\r\n        \"allValue\":
    null,\r\n        \"current\": {\r\n          \"text\": \"influxdb-0\",\r\n          \"value\":
    \"influxdb-0\"\r\n        },\r\n        \"datasource\": \"InfluxDB\",\r\n        \"definition\":
    \"show tag values on alameda_cluster_status from container with key=\\\"name\\\"
    where \\\"alameda_scaler_namespace\\\" = '$ns' and \\\"alameda_scaler_name\\\"
    = '$scaler' and \\\"pod_name\\\" = '$pod'\",\r\n        \"hide\": 0,\r\n        \"includeAll\":
    false,\r\n        \"label\": \"container\",\r\n        \"multi\": false,\r\n        \"name\":
    \"container\",\r\n        \"options\": [],\r\n        \"query\": \"show tag values
    on alameda_cluster_status from container with key=\\\"name\\\" where \\\"alameda_scaler_namespace\\\"
    = '$ns' and \\\"alameda_scaler_name\\\" = '$scaler' and \\\"pod_name\\\" = '$pod'\",\r\n
    \       \"refresh\": 2,\r\n        \"regex\": \"\",\r\n        \"skipUrlSync\":
    false,\r\n        \"sort\": 0,\r\n        \"tagValuesQuery\": \"\",\r\n        \"tags\":
    [],\r\n        \"tagsQuery\": \"\",\r\n        \"type\": \"query\",\r\n        \"useTags\":
    false\r\n      }\r\n    ]\r\n  },\r\n  \"time\": {\r\n    \"from\": \"now-1h\",\r\n
    \   \"to\": \"now+20m\"\r\n  },\r\n  \"timepicker\": {\r\n    \"refresh_intervals\":
    [\r\n      \"5s\",\r\n      \"10s\",\r\n      \"30s\",\r\n      \"1m\",\r\n      \"5m\",\r\n
    \     \"15m\",\r\n      \"30m\",\r\n      \"1h\",\r\n      \"2h\",\r\n      \"1d\"\r\n
    \   ],\r\n    \"time_options\": [\r\n      \"5m\",\r\n      \"15m\",\r\n      \"1h\",\r\n
    \     \"6h\",\r\n      \"12h\",\r\n      \"24h\",\r\n      \"2d\",\r\n      \"7d\",\r\n
    \     \"30d\"\r\n    ]\r\n  },\r\n  \"timezone\": \"\",\r\n  \"title\": \"VPA
    Recommendation\",\r\n  \"uid\": \"7dqda\",\r\n  \"version\": 9\r\n}"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: grafana
    chart: grafana-3.8.4
    dashboard-provider: alameda
    heritage: Tiller
    release: alameda-grafana
  name: alameda-grafana-dashboards-alameda
  namespace: alameda
